{"version":3,"sources":["components/components/subcomponents/helperFunctions.js","components/components/subcomponents/SharedGradient.js","components/components/subcomponents/LabelDisplay.js","components/components/TempLines.js","components/components/TempRound.js","components/components/TempSimple.js","components/components/HumidityDropPercent.js","components/components/subcomponents/SharedGradientInverse.js","components/components/H2ODrop.js","components/components/WaterPlant.js","components/components/Battery.js","components/components/LightThick.js","components/components/AirQualityVent.js","components/components/AirQualityMask.js","components/components/CarBattery.js","components/components/BasicCircle.js","components/components/BasicRectangle.js","components/components/Database.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["changeTempToPercent","data","topEndDataLimit","changeInverseToPercent","getCardSize","gaugeSize","getSvgSizeWidth","getSvgSizeHeight","getCardColor","cardColor","backgroundColor","getHover","hover","getFillColor","highFillThreshold","fillColor","highFillColor","getNeonBorder","neon","undefined","getNeon_NO_Border","SharedGradient","props","animate","backFillColor","react_default","a","createElement","Fragment","id","offset","helper","stop-color","dur","attributeName","fill","from","to","LabelDisplay","labelColor","labelText","style","color","TempLines","dotColor","valueColor","borderColor","_useState","useState","_useState2","Object","slicedToArray","randomId","setRandomId","useEffect","Math","random","toString","substring","className","xmlns","version","x","y","viewBox","enable-background","width","height","x1","y1","x2","y2","subcomponents_SharedGradient","d","cx","cy","r","font-size","font-weight","opacity","class","subcomponents_LabelDisplay","TempSimple","HumidityDropPercent","H2ODrop","SharedGradientInverse","WaterPlant","transform","Battery","LightThick","AirQualityVent","AirQualityMask","CarBattery","BasicCircle","BasicRectangle","Database","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setMeterType","e","setState","meterType","target","value","handlefillColor","hex","handlebackFillColor","handlevalueColor","handlelabelColor","handlecardColor","handledotColor","handlehighFillColor","handleborderColor","handledata","handletopEndDataLimit","handleanimate","handleneon","handlehover","handlegaugeSize","handlelabelText","handlehighFillThreshold","getCode","concat","state","String","_this2","textAlign","paddingBottom","href","for","name","onChange","react_code_blocks_esm","text","language","showLineNumbers","theme","dracula","components_TempLines","components_BasicCircle","components_BasicRectangle","components_Database","components_H2ODrop","components_WaterPlant","components_LightThick","components_AirQualityVent","components_AirQualityMask","components_Battery","TempRound","components_HumidityDropPercent","components_TempSimple","components_CarBattery","type","es","onChangeComplete","Component","App","dashboard_Dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"iOAAaA,QAAsB,SAACC,EAAMC,GACxC,OAAOD,EAAOC,IAGHC,EAAyB,SAACF,EAAMC,GAC3C,OAAQA,EAAkBD,GAAQC,GAGvBE,EAAc,SAACC,GAC1B,MAAkB,UAAdA,EACK,kBACgB,WAAdA,EACF,mBACgB,UAAdA,EACF,kBAEA,MAIEC,EAAkB,SAACD,GAC9B,MAAkB,UAAdA,EACK,IACgB,WAAdA,EACF,IACgB,UAAdA,EACF,IAEA,KAIEE,EAAmB,SAACF,GAC/B,MAAkB,UAAdA,EACK,IACgB,WAAdA,EACF,IACgB,UAAdA,EACF,IAEA,KAIEG,EAAe,SAACC,GAC3B,OAAqB,OAAdA,EAAqB,CAAEC,gBAAiBD,GAAc,MAGlDE,EAAW,SAACC,GACvB,OAAiB,IAAVA,EAAiB,8BAAgC,MAG7CC,EAAe,SAC1BC,EACAb,EACAc,EACAC,GAEA,OAAOF,GAAqBb,EAAOe,EAAgBD,GAGxCE,EAAgB,SAACC,GAC5B,MAAgB,WAATA,QAA8BC,IAATD,GAGjBE,EAAoB,SAACF,GAChC,MAAgB,aAATA,QAAgCC,IAATD,GCTjBG,EApDQ,SAACC,GAAU,IAE9BrB,EAOEqB,EAPFrB,KACAsB,EAMED,EANFC,QACAR,EAKEO,EALFP,UACAC,EAIEM,EAJFN,cACAF,EAGEQ,EAHFR,kBACAU,EAEEF,EAFFE,cACAtB,EACEoB,EADFpB,gBAGF,OACEuB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QACEE,GAAG,QACHC,OAAQC,EAA2B9B,EAAMC,GACzC8B,aAAYD,EACVjB,EACAb,EACAc,EACAC,KAGW,IAAZO,EACCE,EAAAC,EAAAC,cAAA,WACEM,IAAI,KACJC,cAAc,SACdC,KAAK,SACLC,KAAK,IACLC,GAAIN,EAA2B9B,EAAMC,KAGvCuB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,OAGJH,EAAAC,EAAAC,cAAA,QACEE,GAAG,QACHC,OAAO,IACPE,kBAA8Bb,IAAlBK,EAA8B,YAAcA,GAExDC,EAAAC,EAAAC,cAAA,WACEM,IAAI,KACJC,cAAc,SACdC,KAAK,SACLC,KAAK,IACLC,GAAG,WCtCEC,EAVM,SAAChB,GAAU,IACtBiB,EAA0BjB,EAA1BiB,WAAYC,EAAclB,EAAdkB,UAEpB,OACEf,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAAEC,MAAOH,SACHpB,IAAdqB,EAA0B,GAAKA,IC2GvBG,EA7GU,SAACrB,GAAU,IAEhCrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjBgCC,EAoBFC,mBAAS,IApBPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoB3BK,EApB2BH,EAAA,GAoBjBI,EApBiBJ,EAAA,GA0BlC,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,6PAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,mmBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEFH,EAAAC,EAAAC,cAAA,QACEE,GAAG,yBACHY,MAAO,CAAEN,KAAM,QACf+B,MAAM,KACNC,OAAO,OAET1C,EAAAC,EAAAC,cAAA,UACE+C,GAAG,KACHC,GAAG,KACHC,EAAE,IACFzC,UAAmBhB,IAAbyB,EAAyB,QAAUA,IAE3CnB,EAAAC,EAAAC,cAAA,QACEmC,EAAE,KACFC,EAAE,KACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,SAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCE1CG,EAnGG,SAACrB,GAAU,IAEzBrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjByBC,EAoBKC,mBAAS,IApBdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBpBK,EApBoBH,EAAA,GAoBVI,EApBUJ,EAAA,GA0B3B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEQ,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,gTAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrD2B,EAAE,iiBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,weAGJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,SAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCE1C0C,EA/FI,SAAC5D,GAAU,IAE1BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB0BC,EAoBIC,mBAAS,IApBbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBrBK,EApBqBH,EAAA,GAoBXI,EApBWJ,EAAA,GA0B5B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEQ,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,iRAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrD2B,EAAE,qlBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,SAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCmB1C2C,EA5Ga,SAAC7D,GAAU,IAEnCrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjBmCC,EAoBLC,mBAAS,IApBJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoB9BK,EApB8BH,EAAA,GAoBpBI,EApBoBJ,EAAA,GA0BrC,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEQ,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,4VAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACNa,EAAE,ksBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,mOAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,6RAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,uSAGJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,MAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCxD1CnB,EApDQ,SAACC,GAAU,IAE9BrB,EAOEqB,EAPFrB,KACAsB,EAMED,EANFC,QACAR,EAKEO,EALFP,UACAC,EAIEM,EAJFN,cACAF,EAGEQ,EAHFR,kBACAU,EAEEF,EAFFE,cACAtB,EACEoB,EADFpB,gBAGF,OACEuB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QACEE,GAAG,QACHC,OAAQC,EAA8B9B,EAAMC,GAC5C8B,aAAYD,EACVjB,EACAb,EACAc,EACAC,KAGW,IAAZO,EACCE,EAAAC,EAAAC,cAAA,WACEM,IAAI,KACJC,cAAc,SACdC,KAAK,SACLC,KAAK,IACLC,GAAIN,EAA8B9B,EAAMC,KAG1CuB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,OAGJH,EAAAC,EAAAC,cAAA,QACEE,GAAG,QACHC,OAAO,IACPE,kBAA8Bb,IAAlBK,EAA8B,YAAcA,GAExDC,EAAAC,EAAAC,cAAA,WACEM,IAAI,KACJC,cAAc,SACdC,KAAK,SACLC,KAAK,IACLC,GAAG,WC4EE+C,EAnHC,SAAC9D,GAAU,IAEvBrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjBuBC,EAoBOC,mBAAS,IApBhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBlBK,EApBkBH,EAAA,GAoBRI,EApBQJ,EAAA,GA0BzB,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC0D,EAAD,CACEpF,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEQ,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,iUAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrD2B,EAAE,2pBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,0SAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,8NAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,yPAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,sPAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,+XAGJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCgB1C8C,EA7HI,SAAChE,GAAU,IAE1BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB0BC,EAoBIC,mBAAS,IApBbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBrBK,EApBqBH,EAAA,GAoBXI,EApBWJ,EAAA,GA0B5B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC0D,EAAD,CACEpF,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEQ,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,qMACFc,UAAU,mBAGZ9D,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrD2B,EAAE,qQACFc,UAAU,mBAGZ9D,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEQ,KACEJ,EAA8B9B,EAAMC,GAAmB,IACnD,QACA6B,EAA8B9B,EAAMC,GAAmB,KACvD6B,EAA8B9B,EAAMC,GAAmB,IACvD,2BACA,uBAENuE,EAAE,uQACFc,UAAU,mBAEZ9D,EAAAC,EAAAC,cAAA,QACEQ,KACEJ,EAA8B9B,EAAMC,GAAmB,IACnD,0BACA6B,EAA8B9B,EAAMC,GAAmB,KACvD6B,EAA8B9B,EAAMC,GAAmB,IACvD,2BACA,uBAENuE,EAAE,mJACFc,UAAU,mBAGZ9D,EAAAC,EAAAC,cAAA,QAAMmC,EAAE,IAAIC,EAAE,KAAKG,MAAM,KAAKC,OAAO,MACrC1C,EAAAC,EAAAC,cAAA,QAAMmC,EAAE,IAAIC,EAAE,KAAKG,MAAM,KAAKC,OAAO,MAErC1C,EAAAC,EAAAC,cAAA,QACEmC,EAAE,KACFC,EAAE,KACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCxB1CgD,EArGC,SAAClE,GAAU,IAEvBrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjBuBC,EAoBOC,mBAAS,IApBhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBlBK,EApBkBH,EAAA,GAoBRI,EApBQJ,EAAA,GA0BzB,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,2MAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,0UAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,kbAEJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,KACFC,EAAE,KACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,MAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCgB1CiD,EA/GI,SAACnE,GAAU,IAE1BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB0BC,EAoBIC,mBAAS,IApBbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBrBK,EApBqBH,EAAA,GAoBXI,EApBWJ,EAAA,GA0B5B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKvBuB,EAAAC,EAAAC,cAAA,QAAM8C,EAAE,gBACP1C,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,yVAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,+qBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,wMAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,4LAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,+PAEJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCN1CkD,EAnGQ,SAACpE,GAAU,IAE9BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB8BC,EAoBAC,mBAAS,IApBTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBzBK,EApByBH,EAAA,GAoBfI,EApBeJ,EAAA,GA0BhC,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKvBuB,EAAAC,EAAAC,cAAA,QAAM8C,EAAE,gBACP1C,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,4+EAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,gvGAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCM1CmD,EAnGQ,SAACrE,GAAU,IAE9BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB8BC,EAoBAC,mBAAS,IApBTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBzBK,EApByBH,EAAA,GAoBfI,EApBeJ,EAAA,GA0BhC,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKvBuB,EAAAC,EAAAC,cAAA,QAAM8C,EAAE,gBACP1C,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,0sBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,oxKAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCyB1CoD,EAtHI,SAACtE,GAAU,IAE1BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cACAoB,EASEtB,EATFsB,SACAvC,EAQEiB,EARFjB,UACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB0BC,EAoBIC,mBAAS,IApBbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBrBK,EApBqBH,EAAA,GAoBXI,EApBWJ,EAAA,GA0B5B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,kBACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,qXAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,6gBAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,8KAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,0NAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,kGAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,iOAEJhD,EAAAC,EAAAC,cAAA,QACEQ,KAAMS,EACN6B,EAAE,qcAEJhD,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,MAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCd1CqD,EAlGK,SAACvE,GAAU,IAE3BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB2BC,EAoBGC,mBAAS,IApBZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBtBK,EApBsBH,EAAA,GAoBZI,EApBYJ,EAAA,GA0B7B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,iHAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,gPAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,MACFC,EAAE,MACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,OACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCM1CsD,EAlGQ,SAACxE,GAAU,IAE9BrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjB8BC,EAoBAC,mBAAS,IApBTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBzBK,EApByBH,EAAA,GAoBfI,EApBeJ,EAAA,GA0BhC,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,8HAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,qOAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,KACFC,EAAE,KACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,IAGLwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,OCM1CuD,EAlGE,SAACzE,GAAU,IAExBrB,EAgBEqB,EAhBFrB,KACAsB,EAeED,EAfFC,QACAL,EAcEI,EAdFJ,KACAH,EAaEO,EAbFP,UACAC,EAYEM,EAZFN,cACAF,EAWEQ,EAXFR,kBACAU,EAUEF,EAVFE,cAEAnB,GAQEiB,EATFsB,SASEtB,EARFjB,WACAwC,EAOEvB,EAPFuB,WACAN,EAMEjB,EANFiB,WACA9B,EAKEa,EALFb,UACAG,EAIEU,EAJFV,MACA4B,EAGElB,EAHFkB,UACAtC,EAEEoB,EAFFpB,gBACA4C,EACExB,EADFwB,YAjBwBC,EAoBMC,mBAAS,IApBfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoBnBK,EApBmBH,EAAA,GAoBTI,EApBSJ,EAAA,GA0B1B,OAJAK,oBAAU,WACRD,GAAaE,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,KACtD,IAGDjC,EAAAC,EAAAC,cAAA,OACEgC,UAAW5B,EAAmB1B,GAC9BoC,MAAOV,EAAoBtB,IAE3BgB,EAAAC,EAAAC,cAAA,OACEiC,MAAM,6BACNC,QAAQ,MACRhC,GAAG,UACHiC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,MAAO,CAAEwB,oBAAqB,kBAC9BC,MAAOnC,EAAuB1B,GAC9B8D,OAAQpC,EAAwB1B,GAChCsD,UAAW5B,EAAgBnB,IAE3Ba,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgBE,GAAIuB,EAAUgB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEvE,KAAMA,EACNsB,QAASA,EACTR,UAAWA,EACXC,cAAeA,EACfF,kBAAmBA,EACnBU,cAAeA,EACftB,gBAAiBA,MAKtB6B,EAAqBb,GACpBO,EAAAC,EAAAC,cAAA,QACEE,GAAG,OACHM,KAAM,QAAUiB,EAAW,IAC3BqB,EAAE,+cAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGDG,EAAyBb,GACxBO,EAAAC,EAAAC,cAAA,QACEQ,KAAe,WAATjB,EAAoB,QAAUkC,EAAW,IAAMN,EACrDc,MAAM,6BACN/B,GAAG,sBACH4C,EAAE,sqMAGJhD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAGFH,EAAAC,EAAAC,cAAA,QACEmC,EAAE,KACFC,EAAE,KACF5B,KAAMU,EACNJ,MAAO,CACLoC,YAAa,MACbC,cAAe,OACfC,QAAS,QAGV9E,EAVH,MAaFwB,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,gBACTvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1C,WAAYA,EAAYC,UAAWA,wBC+tC1CwD,cA3yCb,SAAAA,IAAc,IAAAC,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAH,IACZC,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAA8C,GAAAM,KAAAH,QAWFI,aAAe,SAACC,GACdP,EAAKQ,SAAS,CAAEC,UAAWF,EAAEG,OAAOC,SAbxBX,EAgBdY,gBAAkB,SAACnE,GACjBuD,EAAKQ,SAAS,CAAE1F,UAAW2B,EAAMoE,OAjBrBb,EAoBdc,oBAAsB,SAACrE,GACrBuD,EAAKQ,SAAS,CAAEjF,cAAekB,EAAMoE,OArBzBb,EAuBde,iBAAmB,SAACtE,GAClBuD,EAAKQ,SAAS,CAAE5D,WAAYH,EAAMoE,OAxBtBb,EA0BdgB,iBAAmB,SAACvE,GAClBuD,EAAKQ,SAAS,CAAElE,WAAYG,EAAMoE,OA3BtBb,EA6BdiB,gBAAkB,SAACxE,GACjBuD,EAAKQ,SAAS,CAAEhG,UAAWiC,EAAMoE,OA9BrBb,EAgCdkB,eAAiB,SAACzE,GAChBuD,EAAKQ,SAAS,CAAE7D,SAAUF,EAAMoE,OAjCpBb,EAmCdmB,oBAAsB,SAAC1E,GACrBuD,EAAKQ,SAAS,CAAEzF,cAAe0B,EAAMoE,OApCzBb,EAsCdoB,kBAAoB,SAAC3E,GACnBuD,EAAKQ,SAAS,CAAE3D,YAAaJ,EAAMoE,OAvCvBb,EA0CdqB,WAAa,SAACd,GACZP,EAAKQ,SAAS,CAAExG,KAAMuG,EAAEG,OAAOC,SA3CnBX,EA8CdsB,sBAAwB,SAACf,GACvBP,EAAKQ,SAAS,CAAEvG,gBAAiBsG,EAAEG,OAAOC,SA/C9BX,EAiDduB,cAAgB,SAAChB,GACfP,EAAKQ,SAAS,CAAElF,QAASiF,EAAEG,OAAOC,SAlDtBX,EAoDdwB,WAAa,SAACjB,GACZP,EAAKQ,SAAS,CAAEvF,KAAMsF,EAAEG,OAAOC,SArDnBX,EAuDdyB,YAAc,SAAClB,GACbP,EAAKQ,SAAS,CAAE7F,MAAO4F,EAAEG,OAAOC,SAxDpBX,EA0Dd0B,gBAAkB,SAACnB,GACjBP,EAAKQ,SAAS,CAAEpG,UAAWmG,EAAEG,OAAOC,SA3DxBX,EA6Dd2B,gBAAkB,SAACpB,GACjBP,EAAKQ,SAAS,CAAEjE,UAAWgE,EAAEG,OAAOC,SA9DxBX,EAiEd4B,wBAA0B,SAACrB,GACzBP,EAAKQ,SAAS,CAAE3F,kBAAmB0F,EAAEG,OAAOC,SAlEhCX,EAqEd6B,QAAU,WAkBR,MAjBQ,KAAAC,OAAQ9B,EAAK+B,MAAMtB,UAAnB,oBAAAqB,OACI9B,EAAK+B,MAAM/H,KADf,gCAAA8H,OAEe9B,EAAK+B,MAAM9H,gBAF1B,wBAAA6H,OAGOE,OAAOhC,EAAK+B,MAAMzG,SAHzB,qBAAAwG,OAII9B,EAAK+B,MAAM9G,KAJf,0BAAA6G,OAKS9B,EAAK+B,MAAMjH,UALpB,+BAAAgH,OAMc9B,EAAK+B,MAAMxG,cANzB,4BAAAuG,OAOU9B,EAAK+B,MAAMnF,WAPrB,2BAAAkF,OAQU9B,EAAK+B,MAAMzF,WARrB,0BAAAwF,OASS9B,EAAK+B,MAAMvH,UATpB,yBAAAsH,OAUQ9B,EAAK+B,MAAMpF,SAVnB,sBAAAmF,OAWK9B,EAAK+B,MAAMpH,MAXhB,0BAAAmH,OAYS9B,EAAK+B,MAAM3H,UAZpB,0BAAA0H,OAaS9B,EAAK+B,MAAMxF,UAbpB,8BAAAuF,OAca9B,EAAK+B,MAAMhH,cAdxB,kCAAA+G,OAeiB9B,EAAK+B,MAAMlH,kBAf5B,gBApERmF,EAAK+B,MAAQ,CACXtB,UAAW,YACXzG,KAAM,GACNC,gBAAiB,IACjBG,UAAW,SACXO,OAAO,EACPW,SAAS,GARC0E,wEA0FL,IAAAiC,EAAA/B,KACP,OACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAE0F,UAAW,SAAUC,cAAe,SAChD3G,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,KAAG0G,KAAK,uDAAR,UAGA5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG0G,KAAK,qDAAR,QAEF5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,SACblC,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,eAAX,mBACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACE4G,KAAK,cACL1G,GAAG,cACH2G,SAAU,SAAChC,GAAD,OAAO0B,EAAK3B,aAAaC,KAEnC/E,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,aAAd,aACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,aAAd,aACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,cAAd,cACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,WAAd,WACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,cAAd,cACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,cAAd,cACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,uBAAd,uBACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,kBAAd,kBACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,kBAAd,kBACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,WAAd,WACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,cAAd,cACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,eAAd,eACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,kBAAd,mBAEFnF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,SACblC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEC,KAAMvC,KAAK2B,UACXa,SAAU,aACVC,iBAAiB,EACjBC,MAAOC,IACP5E,MAAM,SAERzC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAC4B,cAAzBwE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACoH,EAAD,CACE9I,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,gBAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACqH,EAAD,CACE/I,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,mBAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACsH,EAAD,CACEhJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,aAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACuH,EAAD,CACEjJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,YAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACwH,EAAD,CACElJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,eAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACyH,EAAD,CACEnJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,eAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC0H,EAAD,CACEpJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,mBAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC2H,EAAD,CACErJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,mBAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC4H,EAAD,CACEtJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,YAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC6H,EAAD,CACEvJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,cAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC8H,EAAD,CACExJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,wBAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAAC+H,EAAD,CACEzJ,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,eAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACgI,EAAD,CACE1J,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEwB,eAAzBuE,KAAK6B,MAAMtB,UACVjF,EAAAC,EAAAC,cAACiI,EAAD,CACE3J,KAAMkG,KAAK6B,MAAM/H,KACjBC,gBAAiBiG,KAAK6B,MAAM9H,gBAC5BqB,QAAS4E,KAAK6B,MAAMzG,QACpBL,KAAMiF,KAAK6B,MAAM9G,KACjBH,UAAWoF,KAAK6B,MAAMjH,UACtBS,cAAe2E,KAAK6B,MAAMxG,cAC1BqB,WAAYsD,KAAK6B,MAAMnF,WACvBN,WAAY4D,KAAK6B,MAAMzF,WACvB9B,UAAW0F,KAAK6B,MAAMvH,UACtBmC,SAAUuD,KAAK6B,MAAMpF,SACrBhC,MAAOuF,KAAK6B,MAAMpH,MAClBP,UAAW8F,KAAK6B,MAAM3H,UACtBmC,UAAW2D,KAAK6B,MAAMxF,UACtBxB,cAAemF,KAAK6B,MAAMhH,cAC1BF,kBAAmBqF,KAAK6B,MAAMlH,kBAC9BgC,YAAaqD,KAAK6B,MAAMlF,cAG1BrB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,QAINH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,SACblC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,QAAX,QACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEE,GAAG,OACHgI,KAAK,SACLrB,SAAU,SAAChC,GAAD,OAAO0B,EAAKZ,WAAWd,IACjCI,MAAOT,KAAK6B,MAAM/H,OAEpBwB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,mBAAX,mBACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEE,GAAG,kBACHgI,KAAK,SACLrB,SAAU,SAAChC,GAAD,OAAO0B,EAAKX,sBAAsBf,IAC5CI,MAAOT,KAAK6B,MAAM9H,kBAEpBuB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,WAAX,WACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACE4G,KAAK,UACL1G,GAAG,UACH2G,SAAU,SAAChC,GAAD,OAAO0B,EAAKV,cAAchB,IACpCI,MAAOT,KAAK6B,MAAMzG,SAElBE,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,QAAd,QACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,SAAd,WAGJnF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,QAAX,QACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ4G,KAAK,OAAO1G,GAAG,OAAO2G,SAAU,SAAChC,GAAD,OAAO0B,EAAKT,WAAWjB,KAC7D/E,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,IAAd,QACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,UAAd,UACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,YAAd,aAEFnF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,SAAX,SACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACE4G,KAAK,QACL1G,GAAG,QACH2G,SAAU,SAAChC,GAAD,OAAO0B,EAAKR,YAAYlB,IAClCI,MAAOT,KAAK6B,MAAMpH,OAElBa,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,QAAd,QACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,SAAd,UAEFnF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,aAAX,aACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACE4G,KAAK,YACL1G,GAAG,YACH2G,SAAU,SAAChC,GAAD,OAAO0B,EAAKP,gBAAgBnB,IACtCI,MAAOT,KAAK6B,MAAM3H,WAElBoB,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,IAAd,QACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,SAAd,SACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,UAAd,UACAnF,EAAAC,EAAAC,cAAA,UAAQiF,MAAM,SAAd,WAGJnF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,aAAX,aACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOE,GAAG,YAAY2G,SAAU,SAAChC,GAAD,OAAO0B,EAAKN,gBAAgBpB,MAC5D/E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,qBAAX,qBACA7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEE,GAAG,oBACHgI,KAAK,SACLrB,SAAU,SAAChC,GAAD,OAAO0B,EAAKL,wBAAwBrB,MAEhD/E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,cACblC,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,aAAX,aACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMjH,UAClBgJ,iBAAkB5D,KAAKU,gBACvBhF,GAAG,cAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,iBAAX,iBACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMxG,cAClBuI,iBAAkB5D,KAAKY,oBACvBlF,GAAG,kBAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,aAAX,cACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMnF,WAClBkH,iBAAkB5D,KAAKa,iBACvBnF,GAAG,eAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,cAAX,cACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMzF,WAClBwH,iBAAkB5D,KAAKc,iBACvBpF,GAAG,eAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,aAAX,aACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMvH,UAClBsJ,iBAAkB5D,KAAKe,gBACvBrF,GAAG,cAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,YAAX,YACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMpF,SAClBmH,iBAAkB5D,KAAKgB,eACvBtF,GAAG,aAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,iBAAX,iBACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMhH,cAClB+I,iBAAkB5D,KAAKiB,oBACvBvF,GAAG,kBAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2G,IAAI,eAAX,eACA7G,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEpH,MAAOyD,KAAK6B,MAAMlF,YAClBiH,iBAAkB5D,KAAKkB,kBACvBxF,GAAG,gBAELJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oBArmBcqI,aCJTC,mLAVX,OAMExI,EAAAC,EAAAC,cAACuI,EAAD,aARYF,aCDlBG,IAASC,OAAO3I,EAAAC,EAAAC,cAAC0I,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.efe82b2a.chunk.js","sourcesContent":["export const changeTempToPercent = (data, topEndDataLimit) => {\n  return data / topEndDataLimit;\n};\n\nexport const changeInverseToPercent = (data, topEndDataLimit) => {\n  return (topEndDataLimit - data) / topEndDataLimit;\n};\n\nexport const getCardSize = (gaugeSize) => {\n  if (gaugeSize === \"small\") {\n    return \"sensorCardSmall\";\n  } else if (gaugeSize === \"medium\") {\n    return \"sensorCardMedium\";\n  } else if (gaugeSize === \"large\") {\n    return \"sensorCardLarge\";\n  } else {\n    return null;\n  }\n};\n\nexport const getSvgSizeWidth = (gaugeSize) => {\n  if (gaugeSize === \"small\") {\n    return 100;\n  } else if (gaugeSize === \"meduim\") {\n    return 200;\n  } else if (gaugeSize === \"large\") {\n    return 400;\n  } else {\n    return 200;\n  }\n};\n\nexport const getSvgSizeHeight = (gaugeSize) => {\n  if (gaugeSize === \"small\") {\n    return 100;\n  } else if (gaugeSize === \"meduim\") {\n    return 200;\n  } else if (gaugeSize === \"large\") {\n    return 400;\n  } else {\n    return 200;\n  }\n};\n\nexport const getCardColor = (cardColor) => {\n  return cardColor !== null ? { backgroundColor: cardColor } : null;\n};\n\nexport const getHover = (hover) => {\n  return hover === true ? \"sensorTransition sensorGrow\" : null;\n};\n\nexport const getFillColor = (\n  highFillThreshold,\n  data,\n  fillColor,\n  highFillColor\n) => {\n  return highFillThreshold <= data ? highFillColor : fillColor;\n};\n\nexport const getNeonBorder = (neon) => {\n  return neon !== \"border\" || neon === undefined;\n};\n\nexport const getNeon_NO_Border = (neon) => {\n  return neon !== \"noBorder\" || neon === undefined;\n};\n\nexport default {\n  changeTempToPercent,\n  changeInverseToPercent,\n  getCardSize,\n  getSvgSizeWidth,\n  getSvgSizeHeight,\n  getCardColor,\n  getHover,\n  getFillColor,\n  getNeonBorder,\n  getNeon_NO_Border,\n};\n","import React from \"react\";\nimport \"../styles/gauge.css\";\nimport * as helper from \"./helperFunctions.js\";\n//let testArr = [2, 3, 4, 5, 6];\n\nconst SharedGradient = (props) => {\n  const {\n    data,\n    animate,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    topEndDataLimit,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <stop\n        id=\"stop1\"\n        offset={helper.changeTempToPercent(data, topEndDataLimit)}\n        stop-color={helper.getFillColor(\n          highFillThreshold,\n          data,\n          fillColor,\n          highFillColor\n        )}\n      >\n        {animate === true ? (\n          <animate\n            dur=\"2s\"\n            attributeName=\"offset\"\n            fill=\"freeze\"\n            from=\"0\"\n            to={helper.changeTempToPercent(data, topEndDataLimit)}\n          />\n        ) : (\n          <React.Fragment />\n        )}\n      </stop>\n      <stop\n        id=\"stop2\"\n        offset=\"0\"\n        stop-color={backFillColor === undefined ? \"lightgrey\" : backFillColor}\n      >\n        <animate\n          dur=\"2s\"\n          attributeName=\"offset\"\n          fill=\"freeze\"\n          from=\"0\"\n          to=\".10\"\n        />\n      </stop>\n    </React.Fragment>\n  );\n};\n\nexport default SharedGradient;\n","import React from \"react\";\n\nconst LabelDisplay = (props) => {\n  const { labelColor, labelText } = props;\n\n  return (\n    <h4 style={{ color: labelColor }}>\n      {labelText === undefined ? \"\" : labelText}\n    </h4>\n  );\n};\n\nexport default LabelDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nexport const TempLines = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 32 38\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M14.36,12.36v6.989c0,0.152-0.096,0.288-0.24,0.34c-2.249,0.796-3.76,2.93-3.76,5.312c0,3.11,2.53,5.64,5.64,5.64  s5.64-2.529,5.64-5.64c0-2.382-1.511-4.516-3.76-5.312c-0.144-0.052-0.24-0.188-0.24-0.34V12.36H14.36z M14.36,11.64h3.28V1.36  h-3.28V11.64z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M16,31.36c-3.507,0-6.36-2.854-6.36-6.36c0-2.601,1.597-4.939,4-5.9V1  c0-0.199,0.161-0.36,0.36-0.36h4c0.199,0,0.36,0.161,0.36,0.36v18.1c2.402,0.961,4,3.3,4,5.9C22.36,28.507,19.507,31.36,16,31.36z   M14.36,12.36v6.989c0,0.152-0.096,0.288-0.24,0.34c-2.249,0.796-3.76,2.93-3.76,5.312c0,3.11,2.53,5.64,5.64,5.64  s5.64-2.529,5.64-5.64c0-2.382-1.511-4.516-3.76-5.312c-0.144-0.052-0.24-0.188-0.24-0.34V12.36H14.36z M14.36,11.64h3.28V1.36  h-3.28V11.64z M26,18.36h-4v-0.72h4V18.36z M30,15.36h-8v-0.72h8V15.36z M26,12.36h-4v-0.72h4V12.36z M30,9.36h-8V8.64h8V9.36z   M26,6.36h-4V5.64h4V6.36z M30,3.36h-8V2.64h8V3.36z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n        <rect\n          id=\"_Transparent_Rectangle\"\n          style={{ fill: \"none\" }}\n          width=\"32\"\n          height=\"32\"\n        />\n        <circle\n          cx=\"16\"\n          cy=\"25\"\n          r=\"2\"\n          fill={dotColor === undefined ? \"white\" : dotColor}\n        />\n        <text\n          x=\"23\"\n          y=\"28\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"25%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}°\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default TempLines;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useReducer,\n} from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst TempLines = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 205.898 205.898\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M122.089,119.552V19.136C122.089,8.582,113.507,0,102.949,0S83.813,8.582,83.813,19.136v100.415    c-15.94,7.433-26.158,23.388-26.158,41.06c0,24.973,20.321,45.287,45.294,45.287c24.977,0,45.294-20.317,45.294-45.287    C148.243,142.939,138.026,126.985,122.089,119.552z M143.787,160.608c0,22.518-18.32    \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            d=\"M122.089,119.552V19.136C122.089,8.582,113.507,0,102.949,0S83.813,8.582,83.813,19.136v100.415    c-15.94,7.433-26.158,23.388-26.158,41.06c0,24.973,20.321,45.287,45.294,45.287c24.977,0,45.294-20.317,45.294-45.287    C148.243,142.939,138.026,126.985,122.089,119.552z M143.787,160.608c0,22.518-18.32,40.831-40.838,40.831    c-22.515,0-40.838-18.313-40.838-40.831c0-16.373,9.742-31.118,24.809-37.56l1.349-0.583V19.136c0-8.095,6.585-14.68,14.68-14.68    s14.68,6.585,14.68,14.68v103.332l1.356,0.583C134.049,129.49,143.787,144.235,143.787,160.608z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n        <path\n          fill={dotColor}\n          d=\"M105.179,116.739c0-1.228-0.998-2.226-2.23-2.226c-1.231,0-2.23,0.998-2.23,2.226v18.997    c-12.723,1.127-22.697,11.803-22.697,24.816c0,13.764,11.159,24.923,24.927,24.923s24.927-11.159,24.927-24.923    c0-13.013-9.974-23.685-22.697-24.816V116.739z M123.42,160.547c0,11.281-9.183,20.467-20.471,20.467s-20.467-9.183-20.467-20.467    c0-11.026,8.793-19.995,19.719-20.392c0.24,0.086,0.483,0.147,0.748,0.147c0.265,0,0.508-0.061,0.748-0.147    C114.627,140.552,123.42,149.521,123.42,160.547z\"\n        />\n\n        <text\n          x=\"150\"\n          y=\"180\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"120%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}°\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default TempLines;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useReducer,\n} from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst TempSimple = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 180.146 180.146\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M116.707,104.542V26.631C116.707,11.946,104.758,0,90.07,0C75.386,0,63.438,11.946,63.438,26.631v77.911  c-10.013,8.046-15.879,20.135-15.879,33.091c0,23.442,19.07,42.514,42.511,42.514c23.443,0,42.517-19.071,42.517-42.514 C132.587,124.677,126.72,112.588,116.707,104.542z  \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            d=\"M116.707,104.542V26.631C116.707,11.946,104.758,0,90.07,0C75.386,0,63.438,11.946,63.438,26.631v77.911  c-10.013,8.046-15.879,20.135-15.879,33.091c0,23.442,19.07,42.514,42.511,42.514c23.443,0,42.517-19.071,42.517-42.514  C132.587,124.677,126.72,112.588,116.707,104.542z M90.07,165.146c-15.17,0-27.511-12.343-27.511-27.514  c0-9.281,4.669-17.883,12.489-23.007c2.115-1.387,3.39-3.745,3.39-6.273V26.631C78.438,20.218,83.656,15,90.07,15  c6.417,0,11.637,5.218,11.637,11.631v81.722c0,2.529,1.274,4.888,3.39,6.273c7.821,5.124,12.49,13.725,12.49,23.007  C117.587,152.804,105.243,165.146,90.07,165.146z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"130\"\n          y=\"170\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"80%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}°\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default TempSimple;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useReducer,\n} from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst HumidityDropPercent = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 328.611 418.611\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M209.306,50.798c-2.452-3.337-7.147-4.055-10.485-1.602c-3.338,2.453-4.055,7.147-1.603,10.485   c54.576,74.266,66.032,123.541,66.032,151.8c0,27.691-8.272,52.794-23.293,70.685c-17.519,20.866-42.972,31.446-75.651,31.446   c-73.031,0-98.944-55.018-98.944-102.131c0-52.227,28.103-103.234,51.679-136.829c25.858-36.847,52.11-61.415,52.37-61.657       \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            d=\"M209.306,50.798c-2.452-3.337-7.147-4.055-10.485-1.602c-3.338,2.453-4.055,7.147-1.603,10.485   c54.576,74.266,66.032,123.541,66.032,151.8c0,27.691-8.272,52.794-23.293,70.685c-17.519,20.866-42.972,31.446-75.651,31.446   c-73.031,0-98.944-55.018-98.944-102.131c0-52.227,28.103-103.234,51.679-136.829c25.858-36.847,52.11-61.415,52.37-61.657   c3.035-2.819,3.209-7.565,0.39-10.6c-2.819-3.034-7.565-3.209-10.599-0.39c-1.11,1.031-27.497,25.698-54.254,63.765   c-24.901,35.428-54.586,89.465-54.586,145.71c0,31.062,9.673,59.599,27.236,80.353c20.361,24.061,50.345,36.779,86.708,36.779   c36.794,0,66.926-12.726,87.139-36.801c17.286-20.588,26.806-49.117,26.806-80.33C278.25,156.216,240.758,93.597,209.306,50.798z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n        <path\n          fill={dotColor}\n          d=\"M198.43,148.146l-95.162,95.162c-2.929,2.929-2.929,7.678,0,10.606c1.465,1.464,3.385,2.197,5.304,2.197   s3.839-0.732,5.304-2.197l95.162-95.162c2.929-2.929,2.929-7.678,0-10.606C206.107,145.217,201.359,145.217,198.43,148.146z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M191.965,207.899c-13.292,0-24.106,10.814-24.106,24.106s10.814,24.106,24.106,24.106s24.106-10.814,24.106-24.106   S205.257,207.899,191.965,207.899z M191.965,241.111c-5.021,0-9.106-4.085-9.106-9.106s4.085-9.106,9.106-9.106   s9.106,4.085,9.106,9.106S196.986,241.111,191.965,241.111z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M125.178,194.162c13.292,0,24.106-10.814,24.106-24.106s-10.814-24.106-24.106-24.106s-24.106,10.814-24.106,24.106   S111.886,194.162,125.178,194.162z M125.178,160.949c5.021,0,9.106,4.085,9.106,9.106s-4.085,9.106-9.106,9.106   c-5.021,0-9.106-4.085-9.106-9.106S120.156,160.949,125.178,160.949z\"\n        />\n\n        <text\n          x=\"280\"\n          y=\"300\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"230%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}%\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default HumidityDropPercent;\n","import React from \"react\";\nimport \"../styles/gauge.css\";\nimport * as helper from \"./helperFunctions.js\";\n//let testArr = [2, 3, 4, 5, 6];\n\nconst SharedGradient = (props) => {\n  const {\n    data,\n    animate,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    topEndDataLimit,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <stop\n        id=\"stop1\"\n        offset={helper.changeInverseToPercent(data, topEndDataLimit)}\n        stop-color={helper.getFillColor(\n          highFillThreshold,\n          data,\n          fillColor,\n          highFillColor\n        )}\n      >\n        {animate === true ? (\n          <animate\n            dur=\"2s\"\n            attributeName=\"offset\"\n            fill=\"freeze\"\n            from=\"0\"\n            to={helper.changeInverseToPercent(data, topEndDataLimit)}\n          />\n        ) : (\n          <React.Fragment />\n        )}\n      </stop>\n      <stop\n        id=\"stop2\"\n        offset=\"0\"\n        stop-color={backFillColor === undefined ? \"lightgrey\" : backFillColor}\n      >\n        <animate\n          dur=\"2s\"\n          attributeName=\"offset\"\n          fill=\"freeze\"\n          from=\"0\"\n          to=\".10\"\n        />\n      </stop>\n    </React.Fragment>\n  );\n};\n\nexport default SharedGradient;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useReducer,\n} from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradientInverse from \"./subcomponents/SharedGradientInverse\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst H2ODrop = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 463 693\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradientInverse\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M380.058,170.01c-14.224-30.789-34.026-61.115-58.86-90.137c-42.183-49.297-83.771-77.43-85.521-78.603   c-2.527-1.694-5.828-1.694-8.355,0c-1.749,1.173-43.338,29.306-85.521,78.603c-24.834,29.021-44.637,59.348-58.86,90.137   C65.064,208.709,56,248.238,56,287.5C56,384.271,134.728,463,231.5,463S407,384.271,407,287.5     \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            d=\"M380.058,170.01c-14.224-30.789-34.026-61.115-58.86-90.137c-42.183-49.297-83.771-77.43-85.521-78.603   c-2.527-1.694-5.828-1.694-8.355,0c-1.749,1.173-43.338,29.306-85.521,78.603c-24.834,29.021-44.637,59.348-58.86,90.137   C65.064,208.709,56,248.238,56,287.5C56,384.271,134.728,463,231.5,463S407,384.271,407,287.5   C407,248.238,397.935,208.709,380.058,170.01z M231.5,448C143,448,71,376,71,287.5c0-37.002,8.566-74.343,25.46-110.985   c13.602-29.501,32.603-58.631,56.474-86.579c33.306-38.993,67.018-64.867,78.568-73.252c11.512,8.349,45.021,34.052,78.3,72.942   c23.938,27.976,42.994,57.137,56.64,86.676C383.4,213.013,392,250.426,392,287.5C392,376,320,448,231.5,448z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n        <path\n          fill={dotColor}\n          d=\"M365.462,312.214c-4.028-0.975-8.079,1.499-9.054,5.524c-8.594,35.495-32.084,65.794-64.448,83.128   c-3.651,1.955-5.026,6.501-3.07,10.152c1.352,2.524,3.941,3.96,6.618,3.96c1.194,0,2.407-0.286,3.534-0.89   c36.125-19.348,62.348-53.18,71.944-92.821C371.961,317.242,369.488,313.188,365.462,312.214z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M374.387,270.948c-0.306-4.13-3.892-7.225-8.033-6.926c-4.131,0.306-7.231,3.902-6.926,8.033   c0.38,5.127,0.572,10.323,0.572,15.444c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5C375,282.01,374.794,276.441,374.387,270.948z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M199.5,216c-4.143,0-7.5,3.357-7.5,7.5V264h-49v-40.5c0-4.143-3.357-7.5-7.5-7.5s-7.5,3.357-7.5,7.5v96   c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5V279h49v40.5c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5v-96   C207,219.357,203.642,216,199.5,216z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M335,287.5v-32c0-21.78-17.72-39.5-39.5-39.5s-39.5,17.72-39.5,39.5v32c0,21.78,17.72,39.5,39.5,39.5S335,309.28,335,287.5   z M271,287.5v-32c0-13.51,10.99-24.5,24.5-24.5s24.5,10.99,24.5,24.5v32c0,13.51-10.99,24.5-24.5,24.5S271,301.01,271,287.5z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M235.5,351h4c10.752,0,19.5-8.748,19.5-19.5s-8.748-19.5-19.5-19.5h-8c-8.547,0-15.5,6.953-15.5,15.5   c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5c0-0.275,0.225-0.5,0.5-0.5h8c2.481,0,4.5,2.019,4.5,4.5s-2.019,4.5-4.5,4.5h-4   c-10.752,0-19.5,8.748-19.5,19.5v12c0,4.143,3.357,7.5,7.5,7.5h28c4.143,0,7.5-3.357,7.5-7.5s-3.357-7.5-7.5-7.5H231v-4.5   C231,353.018,233.018,351,235.5,351z\"\n        />\n\n        <text\n          x=\"400\"\n          y=\"400\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"355%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default H2ODrop;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useReducer,\n} from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradientInverse from \"./subcomponents/SharedGradientInverse\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst WaterPlant = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 32 42\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradientInverse\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M24.5,30a5.202,5.202,0,0,1-4.626-8.08L23.49,16.5382a1.217,1.217,0,0,1,2.02,0L29.06,21.8154A5.4921,5.4921,0,0,1,30,24.751,5.385,5.385,0,0,1,24.5,30Zm0-11.38-2.9356,4.3672A3.2079,3.2079,0,0,0,24.5\"\n            transform=\"translate(0 0)\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            d=\"M24.5,30a5.202,5.202,0,0,1-4.626-8.08L23.49,16.5382a1.217,1.217,0,0,1,2.02,0L29.06,21.8154A5.4921,5.4921,0,0,1,30,24.751,5.385,5.385,0,0,1,24.5,30Zm0-11.38-2.9356,4.3672A3.2079,3.2079,0,0,0,24.5,28,3.3855,3.3855,0,0,0,28,24.751a3.4354,3.4354,0,0,0-.63-1.867Z\"\n            transform=\"translate(0 0)\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <path\n          fill={\n            helper.changeInverseToPercent(data, topEndDataLimit) > 0.75\n              ? \"green\"\n              : helper.changeInverseToPercent(data, topEndDataLimit) < 0.75 &&\n                helper.changeInverseToPercent(data, topEndDataLimit) > 0.35\n              ? \"rgba(235, 146, 63, 0.59)\"\n              : \"rgba(0, 0, 0, 0.357)\"\n          }\n          d=\"M11,16V11h1a4.0045,4.0045,0,0,0,4-4V4H13a3.9779,3.9779,0,0,0-2.7468,1.1067A6.0034,6.0034,0,0,0,5,2H2V5a6.0066,6.0066,0,0,0,6,6H9v5H2v2H16V16ZM13,6h1V7a2.002,2.002,0,0,1-2,2H11V8A2.002,2.002,0,0,1,13,6ZM8,9A4.0045,4.0045,0,0,1,4,5V4H5A4.0045,4.0045,0,0,1,9,8V9Z\"\n          transform=\"translate(0 0)\"\n        />\n        <path\n          fill={\n            helper.changeInverseToPercent(data, topEndDataLimit) > 0.55\n              ? \"rgba(97, 235, 63, 0.59)\"\n              : helper.changeInverseToPercent(data, topEndDataLimit) < 0.55 &&\n                helper.changeInverseToPercent(data, topEndDataLimit) > 0.35\n              ? \"rgba(235, 146, 63, 0.59)\"\n              : \"rgba(0, 0, 0, 0.357)\"\n          }\n          d=\"M11,16V11h1a4.0045,4.0045,0,0,0,4-4V4H13a3.9779,3.9779,0,0,0-2.7468,1.1067A6.0034,6.0034,0,0,0,5,2H2V5a6.0066,6.0066,0,0,0,6,6H9v5H2v2H16V16ZM13\"\n          transform=\"translate(0 0)\"\n        />\n\n        <rect x=\"2\" y=\"21\" width=\"14\" height=\"2\" />\n        <rect x=\"2\" y=\"26\" width=\"14\" height=\"2\" />\n\n        <text\n          x=\"21\"\n          y=\"34\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"20%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default WaterPlant;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst Battery = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 60 78\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M42.536,4H36V0H24v4h-6.536C15.554,4,14,5.554,14,7.464v49.072C14,58.446,15.554,60,17.464,60h25.071   C44.446,60,46,58.446,46,56.536V7.464C46,5.554,44.446,4,42.536,4z M44,56.536C44,57.344,43.343,58   \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M42.536,4H36V0H24v4h-6.536C15.554,4,14,5.554,14,7.464v49.072C14,58.446,15.554,60,17.464,60h25.071   C44.446,60,46,58.446,46,56.536V7.464C46,5.554,44.446,4,42.536,4z M44,56.536C44,57.344,43.343,58,42.536,58H17.464   C16.657,58,16,57.344,16,56.536V7.464C16,6.656,16.657,6,17.464,6H24h12h6.536C43.343,6,44,6.656,44,7.464V56.536z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n        <path\n          fill={dotColor}\n          d=\"M37,29h-3V17.108c0.013-0.26-0.069-0.515-0.236-0.72c-0.381-0.467-1.264-0.463-1.642,0.004   c-0.026,0.032-0.05,0.066-0.072,0.103L22.15,32.474c-0.191,0.309-0.2,0.696-0.023,1.013C22.303,33.804,22.637,34,23,34h4   l0.002,12.929h0.001c0.001,0.235,0.077,0.479,0.215,0.657C27.407,47.833,27.747,48,28.058,48c0.305,0,0.636-0.16,0.825-0.398   c0.04-0.05,0.074-0.103,0.104-0.159l8.899-16.979c0.163-0.31,0.151-0.682-0.03-0.981S37.35,29,37,29z\"\n        />\n        <text\n          x=\"47\"\n          y=\"55\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"42%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}%\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default Battery;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst LightThick = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 583.891 583.891\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        <path d=\"m6.5 17.5h4\" />\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M391.461,354.651c0-1.873,1.906-5.169,3.642-6.298c54.287-35.315,86.695-94.566,86.695-158.502    C481.798,85.166,396.629,0,291.944,0S102.092,85.169,102.092,189.852c0,63.902,32.408,123.156,86.693,158.499    c1.735,1.129,3.645,4.431,3.645,6.304v52.008c0,24.987,20.328,45.315,45.315,45.315h108.404c24.987,0,45.315-20.328,45.315-45.315           \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M391.461,354.651c0-1.873,1.906-5.169,3.642-6.298c54.287-35.315,86.695-94.566,86.695-158.502    C481.798,85.166,396.629,0,291.944,0S102.092,85.169,102.092,189.852c0,63.902,32.408,123.156,86.693,158.499    c1.735,1.129,3.645,4.431,3.645,6.304v52.008c0,24.987,20.328,45.315,45.315,45.315h108.404c24.987,0,45.315-20.328,45.315-45.315    v-52.011H391.461z M349.468,312.139c-7.242,4.21-12.5,13.351-12.5,21.729v11.604v52.011h-90.046h-0.012l0.012-52.008v-11.569    c0-8.375-5.251-17.516-12.481-21.735l-10.031-5.854c-42.473-24.725-67.825-68.26-67.825-116.464    c0-74.636,60.723-135.359,135.359-135.359s135.359,60.723,135.359,135.359c0,48.217-25.35,91.751-67.812,116.454L349.468,312.139z    \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <path\n          fill={dotColor}\n          d=\"M385.879,492.55c0-12.717-11.563-23.063-25.777-23.063H223.789c-14.214,0-25.777,10.347-25.777,23.063    c0,12.718,11.563,23.063,25.777,23.063h136.313C374.316,515.613,385.879,505.268,385.879,492.55z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M237.95,537.765c-15.707,0-28.489,10.346-28.489,23.063c0,12.717,12.779,23.062,28.489,23.062h109.471    c15.71,0,28.489-10.346,28.489-23.062c0-12.718-12.779-23.063-28.489-23.063H237.95z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M309.288,73.094c-71.545,0-129.768,58.223-129.768,129.769c0,10.248,8.292,18.538,18.538,18.538    c10.248,0,18.537-8.29,18.537-18.538c0-51.126,41.585-92.69,92.69-92.69c10.248,0,18.538-8.29,18.538-18.538    C327.829,81.387,319.536,73.094,309.288,73.094z\"\n        />\n        <text\n          x=\"400\"\n          y=\"575\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"330%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default LightThick;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst AirQualityVent = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 490.001 500.001\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        <path d=\"m6.5 17.5h4\" />\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M485.607,150.221c-31.245-31.245-67.633-55.777-108.154-72.916c-41.959-17.747-86.523-26.746-132.452-26.746   c-45.93,0-90.494,8.999-132.454,26.746c-40.521,17.14-76.909,41.673-108.154,72.918c-4.85,4.851-5.792,12.373-2.288,18.27   l116,195.195c2.704,4.549,7.604,7.337,12.895,7.337h14.386c1.864,6.991,4.364,13.725,6.786,20.24   c2.314,6.224,4.5,12.103,5.995,17.789c1.464,5.566,2.175,10.6,2.175,15.388c0,8.284,6.716,15,15,15s15-6.716,15-15   c0-7.397-1.034-14.927-3.162-23.016c-1.872-7.122-4.423-13.982-6.89-20.616c-1.247-3.354-2.453-6.606-3.538-9.785l46.124,0   c1.862,6.987,4.363,13.724,6.786,20.241c2.314,6.224,4.5,12.103,5.995,17.788c1.464,5.568,2.175,10.603,2.175,15.389   c0,8.284,6.716,15,15,15c8.284,0,15-6.716,15-15c0-7.396-1.034-14.924-3.162-23.016c-1.872-7.122-4.423-13.982-6.89-20.616   c-1.248-3.355-2.454-6.607-3.538-9.786l46.124,0c1.862,6.988,4.363,13.725,6.786,20.241c2.313,6.222,4.499,12.099,5.995,17.788   c1.464,5.568,2.175,10.603,2.175,15.389c0,8.284,6.716,15,15,15s15-6.716,15-15c0-7.396-1.034-14.924-3.162-23.017   c-1.874-7.126-4.424-13.983-6.89-20.615c-1.248-3.355-2.454-6.607-3.538-9.786H359c5.292,0,10.191-2.788,12.895-7.337l116-195.196   C491.4,162.594,490.457,155.072,485.607,150.221z M327.544,341.024c0.356-2.797,0.927-5.704,1.736-8.778   c1.494-5.684,3.68-11.563,5.995-17.788c2.466-6.632,5.016-13.489,6.89-20.616c2.127-8.092,3.162-15.62,3.162-23.016   c0-7.395-1.034-14.923-3.162-23.017c-0.958-3.643-2.094-7.216-3.304-10.726h12.42c5.694,0,8.546-6.884,4.519-10.911l-27.511-27.511   c-2.496-2.496-6.543-2.496-9.039,0l-27.511,27.511c-4.026,4.026-1.175,10.911,4.519,10.911h10.719   c0.062,0.188,0.109,0.379,0.179,0.566c2.314,6.224,4.5,12.102,5.995,17.787c1.464,5.569,2.176,10.604,2.176,15.389   c0,4.786-0.711,9.82-2.175,15.388c-1.497,5.69-3.682,11.567-5.995,17.789c-2.467,6.635-5.019,13.497-6.89,20.616   c-1.498,5.699-2.443,11.115-2.877,16.405l-47.335,0c0.356-2.797,0.927-5.704,1.736-8.779c1.494-5.684,3.68-11.563,5.995-17.788   c2.467-6.634,5.018-13.494,6.89-20.616c2.127-8.092,3.162-15.62,3.162-23.016c0-7.395-1.034-14.923-3.162-23.016   c-0.957-3.642-2.093-7.215-3.304-10.727h11.143c5.694,0,8.546-6.884,4.519-10.911l-27.511-27.511c-2.496-2.496-6.543-2.496-9.039,0   l-27.511,27.511c-4.026,4.026-1.175,10.911,4.519,10.911h11.996c0.062,0.188,0.109,0.379,0.179,0.566   c2.315,6.226,4.501,12.105,5.995,17.787c1.464,5.569,2.176,10.604,2.176,15.389c0,4.786-0.711,9.82-2.175,15.389   c-1.495,5.686-3.681,11.563-5.995,17.788c-2.467,6.635-5.019,13.497-6.89,20.616c-1.498,5.699-2.443,11.116-2.877,16.406l-47.335,0       \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M485.607,150.221c-31.245-31.245-67.633-55.777-108.154-72.916c-41.959-17.747-86.523-26.746-132.452-26.746   c-45.93,0-90.494,8.999-132.454,26.746c-40.521,17.14-76.909,41.673-108.154,72.918c-4.85,4.851-5.792,12.373-2.288,18.27   l116,195.195c2.704,4.549,7.604,7.337,12.895,7.337h14.386c1.864,6.991,4.364,13.725,6.786,20.24   c2.314,6.224,4.5,12.103,5.995,17.789c1.464,5.566,2.175,10.6,2.175,15.388c0,8.284,6.716,15,15,15s15-6.716,15-15   c0-7.397-1.034-14.927-3.162-23.016c-1.872-7.122-4.423-13.982-6.89-20.616c-1.247-3.354-2.453-6.606-3.538-9.785l46.124,0   c1.862,6.987,4.363,13.724,6.786,20.241c2.314,6.224,4.5,12.103,5.995,17.788c1.464,5.568,2.175,10.603,2.175,15.389   c0,8.284,6.716,15,15,15c8.284,0,15-6.716,15-15c0-7.396-1.034-14.924-3.162-23.016c-1.872-7.122-4.423-13.982-6.89-20.616   c-1.248-3.355-2.454-6.607-3.538-9.786l46.124,0c1.862,6.988,4.363,13.725,6.786,20.241c2.313,6.222,4.499,12.099,5.995,17.788   c1.464,5.568,2.175,10.603,2.175,15.389c0,8.284,6.716,15,15,15s15-6.716,15-15c0-7.396-1.034-14.924-3.162-23.017   c-1.874-7.126-4.424-13.983-6.89-20.615c-1.248-3.355-2.454-6.607-3.538-9.786H359c5.292,0,10.191-2.788,12.895-7.337l116-195.196   C491.4,162.594,490.457,155.072,485.607,150.221z M327.544,341.024c0.356-2.797,0.927-5.704,1.736-8.778   c1.494-5.684,3.68-11.563,5.995-17.788c2.466-6.632,5.016-13.489,6.89-20.616c2.127-8.092,3.162-15.62,3.162-23.016   c0-7.395-1.034-14.923-3.162-23.017c-0.958-3.643-2.094-7.216-3.304-10.726h12.42c5.694,0,8.546-6.884,4.519-10.911l-27.511-27.511   c-2.496-2.496-6.543-2.496-9.039,0l-27.511,27.511c-4.026,4.026-1.175,10.911,4.519,10.911h10.719   c0.062,0.188,0.109,0.379,0.179,0.566c2.314,6.224,4.5,12.102,5.995,17.787c1.464,5.569,2.176,10.604,2.176,15.389   c0,4.786-0.711,9.82-2.175,15.388c-1.497,5.69-3.682,11.567-5.995,17.789c-2.467,6.635-5.019,13.497-6.89,20.616   c-1.498,5.699-2.443,11.115-2.877,16.405l-47.335,0c0.356-2.797,0.927-5.704,1.736-8.779c1.494-5.684,3.68-11.563,5.995-17.788   c2.467-6.634,5.018-13.494,6.89-20.616c2.127-8.092,3.162-15.62,3.162-23.016c0-7.395-1.034-14.923-3.162-23.016   c-0.957-3.642-2.093-7.215-3.304-10.727h11.143c5.694,0,8.546-6.884,4.519-10.911l-27.511-27.511c-2.496-2.496-6.543-2.496-9.039,0   l-27.511,27.511c-4.026,4.026-1.175,10.911,4.519,10.911h11.996c0.062,0.188,0.109,0.379,0.179,0.566   c2.315,6.226,4.501,12.105,5.995,17.787c1.464,5.569,2.176,10.604,2.176,15.389c0,4.786-0.711,9.82-2.175,15.389   c-1.495,5.686-3.681,11.563-5.995,17.788c-2.467,6.635-5.019,13.497-6.89,20.616c-1.498,5.699-2.443,11.116-2.877,16.406l-47.335,0   c0.356-2.797,0.927-5.704,1.735-8.778c1.496-5.688,3.681-11.566,5.995-17.789c2.467-6.634,5.018-13.494,6.89-20.615   c2.127-8.09,3.162-15.619,3.162-23.017c0-7.396-1.034-14.926-3.162-23.016c-0.957-3.642-2.093-7.215-3.304-10.727h9.866   c5.694,0,8.546-6.884,4.519-10.911l-27.511-27.511c-2.496-2.496-6.543-2.496-9.039,0l-27.511,27.511   c-4.026,4.026-1.175,10.911,4.519,10.911h13.272c0.062,0.188,0.109,0.379,0.179,0.566c2.315,6.226,4.501,12.105,5.995,17.788   c1.464,5.567,2.175,10.601,2.175,15.388c0,4.788-0.711,9.821-2.175,15.389c-1.495,5.686-3.681,11.563-5.995,17.788   c-2.466,6.633-5.017,13.491-6.89,20.616c-1.498,5.699-2.443,11.116-2.877,16.406h-2.87L33.964,163.378   c57.552-53.497,132.041-82.819,211.038-82.819c78.995,0,153.482,29.321,211.035,82.817L350.466,341.024H327.544z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"400\"\n          y=\"400\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"280%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default AirQualityVent;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst AirQualityMask = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 512 662\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        <path d=\"m6.5 17.5h4\" />\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M443.924,333.592l-11.988,11.989l-23.729-23.73c4.896-15.316,7.548-31.624,7.548-48.543v-16.54    c24.856-17.123,41.185-45.774,41.185-78.173c0-38.568-23.137-71.83-56.257-86.646C374.415,35.883,318.314,0,255.999,0    c-62.317,0-118.417,35.883-144.682,91.951c-33.12,14.816-56.257,48.078-56.257,86.646c0,32.398,16.328,61.05,41.184,78.172v16.541    c0,16.918,2.652,33.227,7.548,48.543l-23.73,23.73l-11.989-11.989L4.982,396.685L120.297,512l63.092-63.092L171.4,436.919    l18.283-18.283c19.556,8.96,41.221,14.078,64.026,14.401c0.761,0.019,1.524,0.029,2.29,0.029c0.766,0,1.529-0.01,2.29-0.029    c22.805-0.322,44.47-5.441,64.026-14.4l18.283,18.283l-11.988,11.988L391.704,512l115.314-115.315L443.924,333.592z             \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M443.924,333.592l-11.988,11.989l-23.729-23.73c4.896-15.316,7.548-31.624,7.548-48.543v-16.54    c24.856-17.123,41.185-45.774,41.185-78.173c0-38.568-23.137-71.83-56.257-86.646C374.415,35.883,318.314,0,255.999,0    c-62.317,0-118.417,35.883-144.682,91.951c-33.12,14.816-56.257,48.078-56.257,86.646c0,32.398,16.328,61.05,41.184,78.172v16.541    c0,16.918,2.652,33.227,7.548,48.543l-23.73,23.73l-11.989-11.989L4.982,396.685L120.297,512l63.092-63.092L171.4,436.919    l18.283-18.283c19.556,8.96,41.221,14.078,64.026,14.401c0.761,0.019,1.524,0.029,2.29,0.029c0.766,0,1.529-0.01,2.29-0.029    c22.805-0.322,44.47-5.441,64.026-14.4l18.283,18.283l-11.988,11.988L391.704,512l115.314-115.315L443.924,333.592z     M411.604,137.396c9.315,11.18,14.93,25.545,14.93,41.201c0.001,26.639-16.242,49.555-39.343,59.365    c-0.048,0.02-0.096,0.039-0.144,0.06c-0.863,0.364-1.738,0.707-2.62,1.035c-0.1,0.037-0.2,0.077-0.301,0.114    c-0.827,0.302-1.664,0.581-2.506,0.849c-0.307,0.097-0.615,0.192-0.923,0.285c-0.62,0.188-1.245,0.364-1.873,0.533    c-0.466,0.126-0.934,0.245-1.404,0.36c-0.568,0.139-1.138,0.272-1.712,0.396c-0.401,0.087-0.804,0.171-1.207,0.25    c-0.769,0.151-1.54,0.292-2.319,0.416c-0.337,0.054-0.678,0.097-1.016,0.145c-0.629,0.089-1.262,0.171-1.897,0.242    c-0.301,0.033-0.602,0.071-0.903,0.1c-0.885,0.086-1.775,0.154-2.669,0.204c-0.238,0.013-0.476,0.023-0.714,0.034    c-0.965,0.044-1.933,0.074-2.909,0.074c-0.001,0-0.001,0-0.001,0c-15.394,0-29.842-5.595-41.146-14.985L411.604,137.396z     M362.075,114.135c1.041,0,2.074,0.029,3.102,0.079c0.301,0.014,0.601,0.04,0.901,0.059c0.741,0.046,1.48,0.098,2.214,0.169    c0.323,0.03,0.645,0.069,0.967,0.105c0.727,0.081,1.45,0.171,2.17,0.277c0.291,0.043,0.582,0.087,0.873,0.134    c0.779,0.125,1.554,0.264,2.323,0.416c0.218,0.044,0.437,0.084,0.655,0.13c0.918,0.192,1.83,0.401,2.734,0.632    c0.064,0.016,0.128,0.03,0.192,0.047c2.985,0.772,5.883,1.757,8.685,2.93l-84.299,84.299c-0.046-0.109-0.097-0.216-0.143-0.326    c-1.399-3.385-2.516-6.922-3.321-10.584l-2.623-11.94h-0.001h-81.015l-2.623,11.94c-1.408,6.408-3.774,12.432-6.928,17.933    c-0.898,1.572-1.863,3.101-2.888,4.584c-1.537,2.225-3.211,4.346-5.006,6.353c-11.966,13.382-29.345,21.687-48.117,21.687h-0.001    c-0.976,0-1.944-0.03-2.909-0.074c-0.238-0.011-0.477-0.02-0.716-0.034c-0.894-0.05-1.783-0.118-2.667-0.204    c-0.303-0.029-0.606-0.067-0.909-0.101c-0.631-0.071-1.26-0.152-1.886-0.24c-0.343-0.049-0.687-0.093-1.029-0.147    c-0.774-0.123-1.542-0.263-2.308-0.414c-0.409-0.08-0.817-0.166-1.224-0.254c-0.558-0.121-1.113-0.25-1.666-0.385    c-0.492-0.121-0.984-0.246-1.474-0.378c-0.131-0.035-0.258-0.075-0.389-0.11l126.582-126.582h102.738    C362.071,114.135,362.073,114.135,362.075,114.135z M255.999,30.404c42.114,0,80.726,20.239,104.712,53.327H151.287    C175.273,50.643,213.885,30.404,255.999,30.404z M85.465,178.597c0-29.975,20.565-55.236,48.328-62.416    c0.061-0.016,0.123-0.029,0.185-0.045c0.906-0.232,1.821-0.442,2.742-0.634c0.215-0.045,0.431-0.085,0.647-0.128    c0.772-0.153,1.55-0.292,2.331-0.418c0.289-0.046,0.578-0.09,0.867-0.133c0.722-0.105,1.447-0.196,2.176-0.278    c0.321-0.035,0.642-0.074,0.963-0.104c0.736-0.071,1.476-0.124,2.219-0.169c0.299-0.018,0.598-0.044,0.897-0.058    c1.03-0.049,2.064-0.079,3.106-0.079c0.001,0,0.002,0,0.003,0h66.409L105.363,225.109    C93.114,213.368,85.465,196.864,85.465,178.597z M120.296,469.001L47.98,396.685l20.094-20.094l36.158,36.158l36.158,36.158    L120.296,469.001z M149.9,415.419l-48.339-48.338l15.275-15.275c11.339,20.063,26.929,37.501,45.644,51.033L149.9,415.419z     M197.54,344.202c0-5.205,0.693-10.25,1.976-15.057l26.079,15.057l-26.079,15.057C198.233,354.452,197.54,349.408,197.54,344.202z     M240.797,400.644c-9.99-2.694-18.934-7.965-26.056-15.067l26.056-15.043V400.644z M240.797,317.871l-26.056-15.043    c7.123-7.102,16.066-12.375,26.056-15.067V317.871z M271.202,400.643v-30.11l26.055,15.043    C290.134,392.678,281.191,397.95,271.202,400.643z M312.483,359.26l-26.079-15.057l26.079-15.057    c1.283,4.807,1.976,9.851,1.976,15.057C314.459,349.409,313.766,354.453,312.483,359.26z M271.202,317.871V287.76    c9.99,2.694,18.934,7.965,26.055,15.067L271.202,317.871z M340.742,370.954c2.673-8.446,4.118-17.434,4.118-26.753    c0-49-39.864-88.864-88.864-88.864c-49,0-88.864,39.864-88.864,88.864c0,9.319,1.445,18.305,4.118,26.753    c-27.31-23.734-44.605-58.707-44.605-97.645v-2.739c4.676,1.184,9.486,2.016,14.404,2.475c0.052,0.005,0.103,0.009,0.154,0.014    c0.841,0.077,1.686,0.143,2.534,0.198c0.186,0.012,0.372,0.024,0.558,0.035c0.734,0.044,1.471,0.077,2.209,0.103    c0.219,0.008,0.438,0.018,0.658,0.025c0.918,0.026,1.839,0.044,2.764,0.044c12.233,0,24.308-2.389,35.531-6.919    c2.494-1.006,4.945-2.119,7.347-3.334c2.402-1.215,4.753-2.534,7.048-3.953c3.442-2.128,6.754-4.482,9.911-7.053    c13.344-10.865,23.494-25.215,29.329-41.239h33.815c5.836,16.025,15.984,30.374,29.329,41.239    c16.837,13.708,38.088,21.259,59.836,21.259c0.924,0,1.846-0.017,2.764-0.044c0.218-0.006,0.436-0.017,0.655-0.025    c0.74-0.026,1.478-0.061,2.213-0.103c0.185-0.011,0.37-0.023,0.554-0.036c0.849-0.055,1.697-0.121,2.54-0.199    c0.05-0.005,0.098-0.008,0.148-0.013c4.918-0.458,9.729-1.291,14.404-2.475v2.739    C385.348,312.248,368.053,347.221,340.742,370.954z M349.518,402.839c18.715-13.533,34.305-30.97,45.644-51.033l15.274,15.274    l-24.169,24.169l-24.169,24.169L349.518,402.839z M391.702,469.002l-20.094-20.094l72.316-72.316l20.094,20.094L391.702,469.002z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"460\"\n          y=\"490\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"380%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default AirQualityMask;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst CarBattery = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 446.3 486.3\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M437.3,103.682h-40.304V68.995c0-4.97-4.029-9-9-9h-34.38c-4.971,0-9,4.03-9,9v34.688H101.684V68.995c0-4.97-4.029-9-9-9   H58.305c-4.971,0-9,4.03-9,9v34.688H9c-4.971,0-9,4.03-9,9v57.039c0,4.97,4.029,9,9,9h1.651v198.583c0,4.97,4.029,9,9,9h407   c4.971,0,9-4.03,9-9V178.721h1.648c4.971,0,9-4.03,9-9v-57.039C446.3,107.712,442.271,103.682,437.3,103.682z M362.616,77.995      \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M437.3,103.682h-40.304V68.995c0-4.97-4.029-9-9-9h-34.38c-4.971,0-9,4.03-9,9v34.688H101.684V68.995c0-4.97-4.029-9-9-9   H58.305c-4.971,0-9,4.03-9,9v34.688H9c-4.971,0-9,4.03-9,9v57.039c0,4.97,4.029,9,9,9h1.651v198.583c0,4.97,4.029,9,9,9h407   c4.971,0,9-4.03,9-9V178.721h1.648c4.971,0,9-4.03,9-9v-57.039C446.3,107.712,442.271,103.682,437.3,103.682z M362.616,77.995   h16.38v25.688h-16.38V77.995z M67.305,77.995h16.379v25.688H67.305V77.995z M18,121.682h410.3v39.039H18V121.682z M417.651,368.305   h-389V178.721h389V368.305z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <path\n          fill={dotColor}\n          d=\"M77.799,251.572v8c0,4.97,4.029,9,9,9s9-4.03,9-9v-8h8c4.971,0,9-4.03,9-9s-4.029-9-9-9h-8v-8c0-4.97-4.029-9-9-9   s-9,4.03-9,9v8h-8c-4.971,0-9,4.03-9,9s4.029,9,9,9H77.799z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M86.799,291.572c27.019,0,49-21.981,49-49s-21.981-49-49-49s-49,21.981-49,49S59.78,291.572,86.799,291.572z    M86.799,211.572c17.094,0,31,13.906,31,31s-13.906,31-31,31s-31-13.906-31-31S69.705,211.572,86.799,211.572z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M379.671,251.572c4.971,0,9-4.03,9-9s-4.029-9-9-9h-34c-4.971,0-9,4.03-9,9s4.029,9,9,9H379.671z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M362.671,291.572c27.019,0,49-21.981,49-49s-21.981-49-49-49s-49,21.981-49,49S335.652,291.572,362.671,291.572z    M362.671,211.572c17.094,0,31,13.906,31,31s-13.906,31-31,31s-31-13.906-31-31S345.577,211.572,362.671,211.572z\"\n        />\n        <path\n          fill={dotColor}\n          d=\"M193.353,275.059c2.89,2.211,6.829,2.463,9.979,0.638l29.866-17.308l-20.193,75.858c-1.278,4.803,1.579,9.734,6.382,11.012   c0.776,0.207,1.555,0.305,2.321,0.305c3.979,0,7.619-2.659,8.691-6.687l25.782-96.854c0.937-3.518-0.339-7.253-3.23-9.464   c-2.891-2.211-6.829-2.463-9.979-0.638l-29.866,17.308l12.69-47.673c1.278-4.803-1.579-9.734-6.382-11.012   c-4.808-1.278-9.734,1.578-11.013,6.382l-18.279,68.669C189.186,269.112,190.461,272.848,193.353,275.059z\"\n        />\n        <text\n          x=\"160\"\n          y=\"465\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"280%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}%\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default CarBattery;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst BasicCircle = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 512 732\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M256,0C114.837,0,0,114.837,0,256s114.837,256,256,256s256-114.837,256-256S397.163,0,256,0z M256,490.667      \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M256,0C114.837,0,0,114.837,0,256s114.837,256,256,256s256-114.837,256-256S397.163,0,256,0z M256,490.667    c-129.387,0-234.667-105.28-234.667-234.667S126.613,21.333,256,21.333S490.667,126.613,490.667,256S385.387,490.667,256,490.667z    \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"470\"\n          y=\"450\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"400%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default BasicCircle;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst BasicRectangle = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 32 38\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M23.93,2H8.07a2.8,2.8,0,0,0-2.8,2.8V27.2A2.8,2.8,0,0,0,8.07,30H23.93a2.8,2.8,0,0,0,2.8-2.8V4.8A2.8,2.8,0,0,0,23.93,2Zm.94\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M23.93,2H8.07a2.8,2.8,0,0,0-2.8,2.8V27.2A2.8,2.8,0,0,0,8.07,30H23.93a2.8,2.8,0,0,0,2.8-2.8V4.8A2.8,2.8,0,0,0,23.93,2Zm.94,25.2a.94.94,0,0,1-.94.93H8.07a.94.94,0,0,1-.94-.93V4.8a.94.94,0,0,1,.94-.93H23.93a.94.94,0,0,1,.94.93Z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"28\"\n          y=\"28\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"20%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default BasicRectangle;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/gauge.css\";\nimport * as helper from \"./subcomponents/helperFunctions.js\";\nimport SharedGradient from \"./subcomponents/SharedGradient\";\nimport LabelDisplay from \"./subcomponents/LabelDisplay\";\nconst Database = (props) => {\n  const {\n    data,\n    animate,\n    neon,\n    fillColor,\n    highFillColor,\n    highFillThreshold,\n    backFillColor,\n    dotColor,\n    gaugeSize,\n    valueColor,\n    labelColor,\n    cardColor,\n    hover,\n    labelText,\n    topEndDataLimit,\n    borderColor,\n  } = props;\n\n  const [randomId, setRandomId] = useState(\"\");\n\n  useEffect(() => {\n    setRandomId((Math.random() + 1).toString(36).substring(8));\n  }, []);\n\n  return (\n    <div\n      className={helper.getCardSize(gaugeSize)}\n      style={helper.getCardColor(cardColor)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 50 75\"\n        style={{ \"enable-background\": \" new 0 0 32 32\" }}\n        width={helper.getSvgSizeWidth(gaugeSize)}\n        height={helper.getSvgSizeHeight(gaugeSize)}\n        className={helper.getHover(hover)}\n      >\n        <defs>\n          <linearGradient id={randomId} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <SharedGradient\n              data={data}\n              animate={animate}\n              fillColor={fillColor}\n              highFillColor={highFillColor}\n              highFillThreshold={highFillThreshold}\n              backFillColor={backFillColor}\n              topEndDataLimit={topEndDataLimit}\n            />\n          </linearGradient>\n        </defs>\n\n        {helper.getNeonBorder(neon) ? (\n          <path\n            id=\"test\"\n            fill={\"url(#\" + randomId + \")\"}\n            d=\"M52.354,8.51C51.196,4.22,42.577,0,27.5,0C12.423,0,3.803,4.22,2.646,8.51C2.562,8.657,2.5,8.818,2.5,9v0.5V21v0.5V22v11  v0.5V34v12c0,0.162,0.043,0.315,0.117,0.451C3.798,51.346,14.364,55,27.5,55c13.106,0,23.655-3.639,24.875-8.516  C52.455,46.341,52.5,46.176,52.5,46V34v-0.5V33V22v-0.5V21V9.5V9C52.5,8.818,52.438,8.657,52.354,8.51z M50.421,33.985  c-0.028,0.121-0.067,0.241-0.116,0.363c-0.04,0.099-0.089,0.198-0.143,0.297c-0.067,0.123-0.142,0.246-0.231,0.369    \"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        {helper.getNeon_NO_Border(neon) ? (\n          <path\n            fill={neon === \"border\" ? \"url(#\" + randomId + \")\" : borderColor}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            id=\"temperature--low_1_\"\n            d=\"M52.354,8.51C51.196,4.22,42.577,0,27.5,0C12.423,0,3.803,4.22,2.646,8.51C2.562,8.657,2.5,8.818,2.5,9v0.5V21v0.5V22v11  v0.5V34v12c0,0.162,0.043,0.315,0.117,0.451C3.798,51.346,14.364,55,27.5,55c13.106,0,23.655-3.639,24.875-8.516  C52.455,46.341,52.5,46.176,52.5,46V34v-0.5V33V22v-0.5V21V9.5V9C52.5,8.818,52.438,8.657,52.354,8.51z M50.421,33.985  c-0.028,0.121-0.067,0.241-0.116,0.363c-0.04,0.099-0.089,0.198-0.143,0.297c-0.067,0.123-0.142,0.246-0.231,0.369  c-0.066,0.093-0.141,0.185-0.219,0.277c-0.111,0.131-0.229,0.262-0.363,0.392c-0.081,0.079-0.17,0.157-0.26,0.236  c-0.164,0.143-0.335,0.285-0.526,0.426c-0.082,0.061-0.17,0.12-0.257,0.18c-0.226,0.156-0.462,0.311-0.721,0.463  c-0.068,0.041-0.141,0.08-0.212,0.12c-0.298,0.168-0.609,0.335-0.945,0.497c-0.043,0.021-0.088,0.041-0.132,0.061  c-0.375,0.177-0.767,0.351-1.186,0.519c-0.012,0.005-0.024,0.009-0.036,0.014c-2.271,0.907-5.176,1.67-8.561,2.17  c-0.017,0.002-0.034,0.004-0.051,0.007c-0.658,0.097-1.333,0.183-2.026,0.259c-0.113,0.012-0.232,0.02-0.346,0.032  c-0.605,0.063-1.217,0.121-1.847,0.167c-0.288,0.021-0.59,0.031-0.883,0.049c-0.474,0.028-0.943,0.059-1.429,0.076  C29.137,40.984,28.327,41,27.5,41s-1.637-0.016-2.432-0.044c-0.486-0.017-0.955-0.049-1.429-0.076  c-0.293-0.017-0.595-0.028-0.883-0.049c-0.63-0.046-1.242-0.104-1.847-0.167c-0.114-0.012-0.233-0.02-0.346-0.032  c-0.693-0.076-1.368-0.163-2.026-0.259c-0.017-0.002-0.034-0.004-0.051-0.007c-3.385-0.5-6.29-1.263-8.561-2.17  c-0.012-0.004-0.024-0.009-0.036-0.014c-0.419-0.168-0.812-0.342-1.186-0.519c-0.043-0.021-0.089-0.041-0.132-0.061  c-0.336-0.162-0.647-0.328-0.945-0.497c-0.07-0.04-0.144-0.079-0.212-0.12c-0.259-0.152-0.495-0.307-0.721-0.463  c-0.086-0.06-0.175-0.119-0.257-0.18c-0.191-0.141-0.362-0.283-0.526-0.426c-0.089-0.078-0.179-0.156-0.26-0.236  c-0.134-0.13-0.252-0.26-0.363-0.392c-0.078-0.092-0.153-0.184-0.219-0.277c-0.088-0.123-0.163-0.246-0.231-0.369  c-0.054-0.099-0.102-0.198-0.143-0.297c-0.049-0.121-0.088-0.242-0.116-0.363C4.541,33.823,4.5,33.661,4.5,33.5  c0-0.113,0.013-0.226,0.031-0.338c0.025-0.151,0.011-0.302-0.031-0.445v-7.424c0.028,0.026,0.063,0.051,0.092,0.077  c0.218,0.192,0.44,0.383,0.69,0.567C9.049,28.786,16.582,31,27.5,31c10.872,0,18.386-2.196,22.169-5.028  c0.302-0.22,0.574-0.447,0.83-0.678l0.001-0.001v7.424c-0.042,0.143-0.056,0.294-0.031,0.445c0.019,0.112,0.031,0.225,0.031,0.338  C50.5,33.661,50.459,33.823,50.421,33.985z M50.5,13.293v7.424c-0.042,0.143-0.056,0.294-0.031,0.445  c0.019,0.112,0.031,0.225,0.031,0.338c0,0.161-0.041,0.323-0.079,0.485c-0.028,0.121-0.067,0.241-0.116,0.363  c-0.04,0.099-0.089,0.198-0.143,0.297c-0.067,0.123-0.142,0.246-0.231,0.369c-0.066,0.093-0.141,0.185-0.219,0.277  c-0.111,0.131-0.229,0.262-0.363,0.392c-0.081,0.079-0.17,0.157-0.26,0.236c-0.164,0.143-0.335,0.285-0.526,0.426  c-0.082,0.061-0.17,0.12-0.257,0.18c-0.226,0.156-0.462,0.311-0.721,0.463c-0.068,0.041-0.141,0.08-0.212,0.12  c-0.298,0.168-0.609,0.335-0.945,0.497c-0.043,0.021-0.088,0.041-0.132,0.061c-0.375,0.177-0.767,0.351-1.186,0.519  c-0.012,0.005-0.024,0.009-0.036,0.014c-2.271,0.907-5.176,1.67-8.561,2.17c-0.017,0.002-0.034,0.004-0.051,0.007  c-0.658,0.097-1.333,0.183-2.026,0.259c-0.113,0.012-0.232,0.02-0.346,0.032c-0.605,0.063-1.217,0.121-1.847,0.167  c-0.288,0.021-0.59,0.031-0.883,0.049c-0.474,0.028-0.943,0.059-1.429,0.076C29.137,28.984,28.327,29,27.5,29  s-1.637-0.016-2.432-0.044c-0.486-0.017-0.955-0.049-1.429-0.076c-0.293-0.017-0.595-0.028-0.883-0.049  c-0.63-0.046-1.242-0.104-1.847-0.167c-0.114-0.012-0.233-0.02-0.346-0.032c-0.693-0.076-1.368-0.163-2.026-0.259  c-0.017-0.002-0.034-0.004-0.051-0.007c-3.385-0.5-6.29-1.263-8.561-2.17c-0.012-0.004-0.024-0.009-0.036-0.014  c-0.419-0.168-0.812-0.342-1.186-0.519c-0.043-0.021-0.089-0.041-0.132-0.061c-0.336-0.162-0.647-0.328-0.945-0.497  c-0.07-0.04-0.144-0.079-0.212-0.12c-0.259-0.152-0.495-0.307-0.721-0.463c-0.086-0.06-0.175-0.119-0.257-0.18  c-0.191-0.141-0.362-0.283-0.526-0.426c-0.089-0.078-0.179-0.156-0.26-0.236c-0.134-0.13-0.252-0.26-0.363-0.392  c-0.078-0.092-0.153-0.184-0.219-0.277c-0.088-0.123-0.163-0.246-0.231-0.369c-0.054-0.099-0.102-0.198-0.143-0.297  c-0.049-0.121-0.088-0.242-0.116-0.363C4.541,21.823,4.5,21.661,4.5,21.5c0-0.113,0.013-0.226,0.031-0.338  c0.025-0.151,0.011-0.302-0.031-0.445v-7.424c0.12,0.109,0.257,0.216,0.387,0.324c0.072,0.06,0.139,0.12,0.215,0.18  c0.3,0.236,0.624,0.469,0.975,0.696c0.073,0.047,0.155,0.093,0.231,0.14c0.294,0.183,0.605,0.362,0.932,0.538  c0.121,0.065,0.242,0.129,0.367,0.193c0.365,0.186,0.748,0.367,1.151,0.542c0.066,0.029,0.126,0.059,0.193,0.087  c0.469,0.199,0.967,0.389,1.485,0.573c0.143,0.051,0.293,0.099,0.44,0.149c0.412,0.139,0.838,0.272,1.279,0.401  c0.159,0.046,0.315,0.094,0.478,0.138c0.585,0.162,1.189,0.316,1.823,0.458c0.087,0.02,0.181,0.036,0.269,0.055  c0.559,0.122,1.139,0.235,1.735,0.341c0.202,0.036,0.407,0.07,0.613,0.104c0.567,0.093,1.151,0.178,1.75,0.256  c0.154,0.02,0.301,0.043,0.457,0.062c0.744,0.09,1.514,0.167,2.305,0.233c0.195,0.016,0.398,0.028,0.596,0.042  c0.633,0.046,1.28,0.084,1.942,0.114c0.241,0.011,0.481,0.022,0.727,0.031C25.712,18.979,26.59,19,27.5,19s1.788-0.021,2.65-0.05  c0.245-0.009,0.485-0.02,0.727-0.031c0.662-0.03,1.309-0.068,1.942-0.114c0.198-0.015,0.4-0.026,0.596-0.042  c0.791-0.065,1.561-0.143,2.305-0.233c0.156-0.019,0.303-0.042,0.457-0.062c0.599-0.078,1.182-0.163,1.75-0.256  c0.206-0.034,0.411-0.068,0.613-0.104c0.596-0.106,1.176-0.219,1.735-0.341c0.088-0.019,0.182-0.036,0.269-0.055  c0.634-0.142,1.238-0.297,1.823-0.458c0.163-0.045,0.319-0.092,0.478-0.138c0.441-0.129,0.867-0.262,1.279-0.401  c0.147-0.05,0.297-0.098,0.44-0.149c0.518-0.184,1.017-0.374,1.485-0.573c0.067-0.028,0.127-0.058,0.193-0.087  c0.403-0.176,0.786-0.356,1.151-0.542c0.125-0.064,0.247-0.128,0.367-0.193c0.327-0.175,0.638-0.354,0.932-0.538  c0.076-0.047,0.158-0.093,0.231-0.14c0.351-0.227,0.675-0.459,0.975-0.696c0.075-0.06,0.142-0.12,0.215-0.18  C50.243,13.509,50.38,13.402,50.5,13.293z M27.5,2c13.555,0,23,3.952,23,7.5s-9.445,7.5-23,7.5s-23-3.952-23-7.5S13.945,2,27.5,2z   M50.5,45.703c-0.014,0.044-0.024,0.089-0.032,0.135C49.901,49.297,40.536,53,27.5,53S5.099,49.297,4.532,45.838  c-0.008-0.045-0.019-0.089-0.032-0.131v-8.414c0.028,0.026,0.063,0.051,0.092,0.077c0.218,0.192,0.44,0.383,0.69,0.567  C9.049,40.786,16.582,43,27.5,43c10.872,0,18.386-2.196,22.169-5.028c0.302-0.22,0.574-0.447,0.83-0.678l0.001-0.001V45.703z\"\n          />\n        ) : (\n          <React.Fragment />\n        )}\n\n        <text\n          x=\"20\"\n          y=\"65\"\n          fill={valueColor}\n          style={{\n            \"font-size\": \"30%\",\n            \"font-weight\": \"bold\",\n            opacity: \"0.8\",\n          }}\n        >\n          {data}%\n        </text>\n      </svg>\n      <div class=\"tagContainer\">\n        <LabelDisplay labelColor={labelColor} labelText={labelText} />\n      </div>\n    </div>\n  );\n};\n\nexport default Database;\n","import React, { Component } from \"react\";\n\n// TableSelect is the reusable component.\nimport TempLines from \"../components/TempLines\";\nimport TempRound from \"../components/TempRound\";\nimport TempSimple from \"../components/TempSimple\";\nimport HumidityDropPercent from \"../components/HumidityDropPercent\";\nimport H2ODrop from \"../components/H2ODrop\";\nimport WaterPlant from \"../components/WaterPlant\";\nimport Battery from \"../components/Battery\";\nimport LightThick from \"../components/LightThick\";\nimport AirQualityVent from \"../components/AirQualityVent\";\nimport AirQualityMask from \"../components/AirQualityMask\";\nimport CarBattery from \"../components/CarBattery\";\nimport BasicCircle from \"../components/BasicCircle\";\nimport BasicRectangle from \"../components/BasicRectangle\";\nimport Database from \"../components/Database\";\nimport { SliderPicker } from \"react-color\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\n//import { TempLines, BasicCircle } from \"testing-testingtestreact-package\";\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      meterType: \"TempLines\",\n      data: 55,\n      topEndDataLimit: 100,\n      gaugeSize: \"medium\",\n      hover: true,\n      animate: true,\n    };\n  }\n\n  setMeterType = (e) => {\n    this.setState({ meterType: e.target.value });\n  };\n\n  handlefillColor = (color) => {\n    this.setState({ fillColor: color.hex });\n  };\n\n  handlebackFillColor = (color) => {\n    this.setState({ backFillColor: color.hex });\n  };\n  handlevalueColor = (color) => {\n    this.setState({ valueColor: color.hex });\n  };\n  handlelabelColor = (color) => {\n    this.setState({ labelColor: color.hex });\n  };\n  handlecardColor = (color) => {\n    this.setState({ cardColor: color.hex });\n  };\n  handledotColor = (color) => {\n    this.setState({ dotColor: color.hex });\n  };\n  handlehighFillColor = (color) => {\n    this.setState({ highFillColor: color.hex });\n  };\n  handleborderColor = (color) => {\n    this.setState({ borderColor: color.hex });\n  };\n\n  handledata = (e) => {\n    this.setState({ data: e.target.value });\n  };\n\n  handletopEndDataLimit = (e) => {\n    this.setState({ topEndDataLimit: e.target.value });\n  };\n  handleanimate = (e) => {\n    this.setState({ animate: e.target.value });\n  };\n  handleneon = (e) => {\n    this.setState({ neon: e.target.value });\n  };\n  handlehover = (e) => {\n    this.setState({ hover: e.target.value });\n  };\n  handlegaugeSize = (e) => {\n    this.setState({ gaugeSize: e.target.value });\n  };\n  handlelabelText = (e) => {\n    this.setState({ labelText: e.target.value });\n  };\n\n  handlehighFillThreshold = (e) => {\n    this.setState({ highFillThreshold: e.target.value });\n  };\n\n  getCode = () => {\n    let code = ` <${this.state.meterType}\n        data={${this.state.data}}\n        topEndDataLimit={${this.state.topEndDataLimit}}\n        animate={${String(this.state.animate)}}\n        neon={${this.state.neon}}\n        fillColor={${this.state.fillColor}}\n        backFillColor={\"${this.state.backFillColor}\"}\n        valueColor={${this.state.valueColor}}\n        labelColor={${this.state.labelColor}}\n        cardColor={${this.state.cardColor}}\n        dotColor={${this.state.dotColor}}\n        hover={${this.state.hover}}\n        gaugeSize={${this.state.gaugeSize}}\n        labelText={${this.state.labelText}}\n        highFillColor={${this.state.highFillColor}}\n        highFillThreshold={${this.state.highFillThreshold}}\n      />`;\n    return code;\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ textAlign: \"center\", paddingBottom: \"20px\" }}>\n          <h2>react-sensor-meters</h2>\n          <a href=\"https://github.com/chrismilheim/react-sensor-meters\">\n            Github\n          </a>\n          <br />\n          <a href=\"https://www.npmjs.com/package/react-sensor-meters\">NPM</a>\n        </div>\n        <hr />\n        <br />\n        <div className=\"pics \">\n          <label for=\"selectMeter\">Choose a meter:</label>\n          <br />\n          <select\n            name=\"selectMeter\"\n            id=\"selectMeter\"\n            onChange={(e) => this.setMeterType(e)}\n          >\n            <option value=\"TempLines\">TempLines</option>\n            <option value=\"TempRound\">TempRound</option>\n            <option value=\"TempSimple\">TempSimple</option>\n            <option value=\"H2ODrop\">H20Drop</option>\n            <option value=\"WaterPlant\">WaterPlant</option>\n            <option value=\"LightThick\">LightThick</option>\n            <option value=\"HumidityDropPercent\">HumidityDropPercent</option>\n            <option value=\"AirQualityMask\">AirQualityMask</option>\n            <option value=\"AirQualityVent\">AirQualityVent</option>\n            <option value=\"Battery\">Battery</option>\n            <option value=\"CarBattery\">CarBattery</option>\n            <option value=\"BasicCircle\">BasicCircle</option>\n            <option value=\"BasicRectangle\">BasicRectangle</option>\n          </select>\n          <br />\n          <br />\n        </div>\n        <br />\n        <br />\n        <div className=\"pics \">\n          <CopyBlock\n            text={this.getCode()}\n            language={\"javascript\"}\n            showLineNumbers={false}\n            theme={dracula}\n            width=\"100%\"\n          />\n          <br />\n          <br />\n          <div>\n            {this.state.meterType === \"TempLines\" ? (\n              <TempLines\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"BasicCircle\" ? (\n              <BasicCircle\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"BasicRectangle\" ? (\n              <BasicRectangle\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"Database\" ? (\n              <Database\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"H2ODrop\" ? (\n              <H2ODrop\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"WaterPlant\" ? (\n              <WaterPlant\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"LightThick\" ? (\n              <LightThick\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"AirQualityVent\" ? (\n              <AirQualityVent\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"AirQualityMask\" ? (\n              <AirQualityMask\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"Battery\" ? (\n              <Battery\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"TempRound\" ? (\n              <TempRound\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"HumidityDropPercent\" ? (\n              <HumidityDropPercent\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"TempSimple\" ? (\n              <TempSimple\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n            {this.state.meterType === \"CarBattery\" ? (\n              <CarBattery\n                data={this.state.data}\n                topEndDataLimit={this.state.topEndDataLimit}\n                animate={this.state.animate}\n                neon={this.state.neon}\n                fillColor={this.state.fillColor}\n                backFillColor={this.state.backFillColor}\n                valueColor={this.state.valueColor}\n                labelColor={this.state.labelColor}\n                cardColor={this.state.cardColor}\n                dotColor={this.state.dotColor}\n                hover={this.state.hover}\n                gaugeSize={this.state.gaugeSize}\n                labelText={this.state.labelText}\n                highFillColor={this.state.highFillColor}\n                highFillThreshold={this.state.highFillThreshold}\n                borderColor={this.state.borderColor}\n              />\n            ) : (\n              <React.Fragment />\n            )}\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\" pics\">\n          <div>\n            <label for=\"data\">data</label>\n            <br />\n            <input\n              id=\"data\"\n              type=\"number\"\n              onChange={(e) => this.handledata(e)}\n              value={this.state.data}\n            />\n            <br />\n            <br />\n            <label for=\"topEndDataLimit\">topEndDataLimit</label>\n            <br />\n            <input\n              id=\"topEndDataLimit\"\n              type=\"number\"\n              onChange={(e) => this.handletopEndDataLimit(e)}\n              value={this.state.topEndDataLimit}\n            />\n            <br />\n            <br />\n            <label for=\"animate\">animate</label>\n            <br />\n            <select\n              name=\"animate\"\n              id=\"animate\"\n              onChange={(e) => this.handleanimate(e)}\n              value={this.state.animate}\n            >\n              <option value=\"true\">true</option>\n              <option value=\"false\">false</option>\n            </select>\n          </div>\n          <br />\n          <br />\n          <div>\n            <label for=\"neon\">neon</label>\n            <br />\n            <select name=\"neon\" id=\"neon\" onChange={(e) => this.handleneon(e)}>\n              <option value=\"\">none</option>\n              <option value=\"border\">border</option>\n              <option value=\"noBorder\">noBorder</option>\n            </select>\n            <br />\n            <br />\n            <label for=\"hover\">hover</label>\n            <br />\n            <select\n              name=\"hover\"\n              id=\"hover\"\n              onChange={(e) => this.handlehover(e)}\n              value={this.state.hover}\n            >\n              <option value=\"true\">true</option>\n              <option value=\"false\">false</option>\n            </select>\n            <br />\n            <br />\n            <label for=\"gaugeSize\">gaugeSize</label>\n            <br />\n            <select\n              name=\"gaugeSize\"\n              id=\"gaugeSize\"\n              onChange={(e) => this.handlegaugeSize(e)}\n              value={this.state.gaugeSize}\n            >\n              <option value=\"\">none</option>\n              <option value=\"small\">small</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"large\">large</option>\n            </select>\n          </div>\n          <br />\n          <br />\n          <div>\n            <label for=\"labelText\">labelText</label>\n            <br />\n            <input id=\"labelText\" onChange={(e) => this.handlelabelText(e)} />\n            <br />\n            <br />\n            <label for=\"highFillThreshold\">highFillThreshold</label>\n            <br />\n            <input\n              id=\"highFillThreshold\"\n              type=\"number\"\n              onChange={(e) => this.handlehighFillThreshold(e)}\n            />\n            <br />\n            <br />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"pickColor \">\n          <label for=\"fillColor\">fillColor</label>\n          <SliderPicker\n            color={this.state.fillColor}\n            onChangeComplete={this.handlefillColor}\n            id=\"fillColor\"\n          />\n          <br />\n          <br />\n          <label for=\"backFillColor\">backFillColor</label>\n          <SliderPicker\n            color={this.state.backFillColor}\n            onChangeComplete={this.handlebackFillColor}\n            id=\"backFillColor\"\n          />\n          <br />\n          <br />\n          <label for=\"fillColor\">valueColor</label>\n          <SliderPicker\n            color={this.state.valueColor}\n            onChangeComplete={this.handlevalueColor}\n            id=\"valueColor\"\n          />\n          <br />\n          <br />\n          <label for=\"labelColor\">labelColor</label>\n          <SliderPicker\n            color={this.state.labelColor}\n            onChangeComplete={this.handlelabelColor}\n            id=\"labelColor\"\n          />\n          <br />\n          <br />\n\n          <label for=\"cardColor\">cardColor</label>\n          <SliderPicker\n            color={this.state.cardColor}\n            onChangeComplete={this.handlecardColor}\n            id=\"cardColor\"\n          />\n          <br />\n          <br />\n          <label for=\"dotColor\">dotColor</label>\n          <SliderPicker\n            color={this.state.dotColor}\n            onChangeComplete={this.handledotColor}\n            id=\"dotColor\"\n          />\n          <br />\n          <br />\n          <label for=\"highFillColor\">highFillColor</label>\n          <SliderPicker\n            color={this.state.highFillColor}\n            onChangeComplete={this.handlehighFillColor}\n            id=\"highFillColor\"\n          />\n          <br />\n          <br />\n          <label for=\"borderColor\">borderColor</label>\n          <SliderPicker\n            color={this.state.borderColor}\n            onChangeComplete={this.handleborderColor}\n            id=\"borderColor\"\n          />\n          <br />\n          <br />\n        </div>\n      </div>\n\n      // <div className=\"pics\">\n      //   <TempLines\n      //     data={85}\n      //     topEndDataLimit={120}\n      //     animate={false}\n      //     neon={\"\"}\n      //     fillColor={\"rgb(182, 25, 13)\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"rgb(48, 13, 10)\"}\n      //     labelColor={\"orange\"}\n      //     cardColor={\"grey\"}\n      //     dotColor={\"purple\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempLines\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n\n      //   <TempLines\n      //     data={85}\n      //     topEndDataLimit={120}\n      //     animate={false}\n      //     neon={\"border\"}\n      //     fillColor={\"rgb(182, 25, 13)\"}\n      //     backFillColor={\"grey\"}\n      //     valueColor={\"rgb(48, 13, 10)\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempLines neon = border\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n\n      //   <TempLines\n      //     data={85}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"rgb(182, 25, 13)\"}\n      //     backFillColor={\"grey\"}\n      //     valueColor={\"orange\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempLines neon = noBorder\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n      //   <BasicCircle\n      //     data={900}\n      //     topEndDataLimit={1220}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"black\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicCircle\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <BasicCircle\n      //     data={900}\n      //     topEndDataLimit={1220}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicCircle neon = border\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <BasicCircle\n      //     data={900}\n      //     topEndDataLimit={1220}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicCircle neon = noBorder\"}\n      //     highFillThreshold={80}\n      //   />\n\n      //   <BasicRectangle\n      //     data={500}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicRectangle\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <BasicRectangle\n      //     data={500}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicRectangle neon = border\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <BasicRectangle\n      //     data={500}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"BasicRectangle neon = noBorder\"}\n      //     highFillThreshold={80}\n      //   />\n\n      //   <Database\n      //     data={200}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Database\"}\n      //     highFillThreshold={80}\n      //     highFillColor={\"red\"}\n      //     borderColor={\"lightGreen\"}\n      //   />\n\n      //   <Database\n      //     data={200}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Database neon = border\"}\n      //     highFillThreshold={80}\n      //     highFillColor={\"red\"}\n      //     borderColor={\"lightGreen\"}\n      //   />\n\n      //   <Database\n      //     data={200}\n      //     topEndDataLimit={1000}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Database neon = noBorder\"}\n      //     highFillThreshold={80}\n      //     highFillColor={\"red\"}\n      //     borderColor={\"lightGreen\"}\n      //   />\n\n      //   <H2ODrop\n      //     data={1000}\n      //     topEndDataLimit={2000}\n      //     animate={false}\n      //     neon={\"\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={false}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"H20Drop\"}\n      //   />\n\n      //   <H2ODrop\n      //     data={1000}\n      //     topEndDataLimit={2000}\n      //     animate={false}\n      //     neon={\"border\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={false}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"H20Drop neon = border\"}\n      //   />\n\n      //   <H2ODrop\n      //     data={1000}\n      //     topEndDataLimit={2000}\n      //     animate={false}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={false}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"H20Drop neon = noBorder\"}\n      //   />\n\n      //   <WaterPlant\n      //     data={400}\n      //     topEndDataLimit={2000}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"WaterPlant\"}\n      //   />\n      //   <WaterPlant\n      //     data={400}\n      //     topEndDataLimit={2000}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"WaterPlant neon = border\"}\n      //   />\n      //   <WaterPlant\n      //     data={400}\n      //     topEndDataLimit={2000}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"WaterPlant neon = noBorder\"}\n      //   />\n\n      //   <LightThick\n      //     data={80}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"LightThick\"}\n      //   />\n      //   <LightThick\n      //     data={80}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"LightThick neon = border\"}\n      //   />\n      //   <LightThick\n      //     data={80}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey \"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"black\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"LightThick neon = noBorder\"}\n      //   />\n\n      //   <AirQualityVent\n      //     data={100}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\" grey \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityVent\"}\n      //   />\n      //   <AirQualityVent\n      //     data={100}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\" grey \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityVent neon = border\"}\n      //   />\n      //   <AirQualityVent\n      //     data={100}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\" grey \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityVent neon = noBorder\"}\n      //   />\n\n      //   <AirQualityMask\n      //     data={50}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityMask\"}\n      //   />\n      //   <AirQualityMask\n      //     data={50}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityMask neon = border\"}\n      //   />\n      //   <AirQualityMask\n      //     data={50}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\" yellow \"}\n      //     backFillColor={\"lightgrey\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"AirQualityMask neon = noBorder\"}\n      //   />\n\n      //   <Battery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Battery \"}\n      //     highFillThreshold={80}\n      //   />\n      //   <Battery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Battery neon = border\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <Battery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"lightgreen\"}\n      //     backFillColor={\"green\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"Battery neon = noBorder\"}\n      //     highFillThreshold={80}\n      //   />\n\n      //   <TempRound\n      //     data={96}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"red\"}\n      //     backFillColor={\"orange\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempRound\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n\n      //   <TempRound\n      //     data={96}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"red\"}\n      //     backFillColor={\"orange\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempRound neon = border\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n\n      //   <TempRound\n      //     data={96}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"red\"}\n      //     backFillColor={\"orange\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempRound neon = noBorder\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //   />\n\n      //   <HumidityDropPercent\n      //     data={22}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"lightblue\"}\n      //     backFillColor={\"rgba(43, 42, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"HumidityDropPercent \"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"lightGreen\"}\n      //   />\n      //   <HumidityDropPercent\n      //     data={22}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"lightblue\"}\n      //     backFillColor={\"rgba(43, 42, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"HumidityDropPercent neon = border\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"lightGreen\"}\n      //   />\n      //   <HumidityDropPercent\n      //     data={22}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"lightblue\"}\n      //     backFillColor={\"rgba(43, 42, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"HumidityDropPercent neon = noBorder\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"lightGreen\"}\n      //   />\n      //   <TempSimple\n      //     data={92}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"rgba(49, 78, 55, 0.627)\"}\n      //     backFillColor={\"rgba(43, 42, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempSimple\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"purple\"}\n      //   />\n\n      //   <TempSimple\n      //     data={92}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"red\"}\n      //     backFillColor={\"rgba(43, 99, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempSimple neon = border\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"purple\"}\n      //   />\n      //   <TempSimple\n      //     data={92}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"blue\"}\n      //     backFillColor={\"rgba(43, 99, 42, 0.627)\"}\n      //     valueColor={\"blue\"}\n      //     labelColor={\"blue\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"blue\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"TempSimple neon = noBorder\"}\n      //     highFillColor={\"purple\"}\n      //     highFillThreshold={95}\n      //     borderColor={\"purple\"}\n      //   />\n      //   <CarBattery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"\"}\n      //     fillColor={\"black\"}\n      //     backFillColor={\"grey\"}\n      //     valueColor={\"black\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"CarBattery\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <CarBattery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"border\"}\n      //     fillColor={\"black\"}\n      //     backFillColor={\"grey\"}\n      //     valueColor={\"black\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"CarBattery neon = border\"}\n      //     highFillThreshold={80}\n      //   />\n      //   <CarBattery\n      //     data={90}\n      //     topEndDataLimit={120}\n      //     animate={true}\n      //     neon={\"noBorder\"}\n      //     fillColor={\"black\"}\n      //     backFillColor={\"grey\"}\n      //     valueColor={\"black\"}\n      //     labelColor={\"black\"}\n      //     cardColor={\"white\"}\n      //     dotColor={\"teal\"}\n      //     hover={true}\n      //     gaugeSize={\"medium\"}\n      //     labelText={\"CarBattery neon = noBorder\"}\n      //     highFillThreshold={80}\n      //   />\n      // </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nclass App extends Component {\n  render() {\n    return (\n      // <Router>\n      //   <div className=\"App\">\n      //     <Route exact path=\"/\" component={Dashboard} />\n      //   </div>\n      // </Router>\n      <Dashboard />\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}